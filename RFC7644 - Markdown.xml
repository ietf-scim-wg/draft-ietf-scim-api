<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.6 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-scim-api-20" category="info">

  <front>
    <title abbrev="SCIM Protocol Specification">System for Cross-domain Identity Management: Protocol</title>

    <author initials="." surname="TBD" fullname="TBD">
      <organization>TBD Company</organization>
      <address>
        <email>TBD Email</email>
      </address>
    </author>

    <date year="2022" month="April" day="14"/>

    <area>TODO</area>
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<t>The System for Cross-domain Identity Management (SCIM) specification
   is an HTTP-based protocol that makes managing identities in multi-
   domain scenarios easier to support via a standardized service.
   Examples include, but are not limited to, enterprise-to-cloud service
   providers and inter-cloud scenarios.  The specification suite seeks
   to build upon experience with existing schemas and deployments,
   placing specific emphasis on simplicity of development and
   integration, while applying existing authentication, authorization,
   and privacy models.  SCIM's intent is to reduce the cost and
   complexity of user management operations by providing a common user
   schema, an extension model, and a service protocol defined by this
   document.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction-and-overview" title="Introduction and Overview">

<t>The SCIM protocol is an application-level HTTP-based protocol for
   provisioning and managing identity data on the web and in
   cross-domain environments such as enterprise-to-cloud service
   providers or inter-cloud scenarios.  The protocol supports creation,
   modification, retrieval, and discovery of core identity resources
   such as Users and Groups, as well as custom resources and resource
   extensions.</t>

<t>The definition of resources, attributes, and overall schema are
   defined in the SCIM Core Schema document <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.</t>

<section anchor="intended-audience" title="Intended Audience">

<t>This document is intended to serve as a guide to SCIM protocol usage
   for both SCIM HTTP service providers and HTTP clients who may
   provision information to service providers or retrieve information
   from them.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <eref target="https://datatracker.ietf.org/doc/html/rfc2119">RFC2119</eref>.  These key
   words are capitalized when used to unambiguously specify requirements
   of the protocol or application features and behavior that affect the
   interoperability and security of implementations.  When these words
   are not capitalized, they are meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
   Implementers MUST percent-encode URLs as described in Section 2.1 of
   <eref target="https://datatracker.ietf.org/doc/html/rfc3986">RFC3986</eref>.</t>

<t>Throughout this document, figures may contain spaces and extra line
   wrapping to improve readability and accommodate space limitations.
   Similarly, some URIs contained within examples have been shortened
   for space and readability reasons (as indicated by "â€¦").</t>

</section>
<section anchor="definitions" title="Definitions">

<t>This specification uses the definitions from <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref> and defines
   the following additional term:</t>

<t><list style="hanging">
  <t hangText="Base URI">
  The SCIM HTTP protocol is described in terms of a path relative to a Base URI.  The Base URI MUST NOT contain a query string, as
clients MAY append additional path information and query parameters as part of forming the request.  The base URI is a URL
that most often consists of the "https" protocol scheme, a domain name, and some initial path <eref target="https://datatracker.ietf.org/doc/html/rfc3986">RFC3986</eref>.  For example:</t>
</list></t>

<t>"https://example.com/scim/"</t>

<t>For readability, all examples in this document assume that the SCIM
   service root and the server root are the same (no path prefix).  It
   is expected that SCIM servers may be deployed using any URI path
   prefix.  For example, a SCIM server might have a prefix of
   "https://example.com/" or "https://example.com/scim/tenancypath/".
   Additionally, a client MAY apply a version number to the server root
   prefix (see Section 3.13).</t>

</section>
</section>
<section anchor="authentication-and-authorization" title="Authentication and Authorization">

<t>The SCIM protocol is based upon HTTP and does not itself define a
   SCIM-specific scheme for authentication and authorization.  SCIM
   depends on the use of Transport Layer Security (TLS) and/or standard
   HTTP authentication and authorization schemes as per <eref target="https://datatracker.ietf.org/doc/html/rfc7235">RFC7235</eref>.  For
   example, the following methodologies could be used, among others:</t>

<t><list style="hanging">
  <t hangText="TLS Client Authentication">
  The SCIM service provider MAY request TLS client authentication (also known as mutual authentication).  See Section 7.3 of <eref target="https://datatracker.ietf.org/doc/html/rfc5246">RFC5246</eref>.</t>
  <t hangText="HOBA Authentication">
  HTTP Origin-Bound Authentication (HOBA) is a variation on TLS client authentication and uses a digital-signature-based design for an HTTP authentication method (see <eref target="https://datatracker.ietf.org/doc/html/rfc7486">RFC7486</eref>).  The design can also be used in JavaScript-based authentication embedded in HTML.
HOBA is an alternative to HTTP authentication schemes that require passwords and therefore avoids all problems related to passwords, such as leakage of server-side password databases.</t>
  <t hangText="Bearer Tokens">
  Bearer tokens <eref target="https://datatracker.ietf.org/doc/html/rfc6750">RFC6750</eref> MAY be used when combined with TLS and a token framework such as OAuth 2.0 <eref target="https://datatracker.ietf.org/doc/html/rfc6749">RFC6749</eref>.  Tokens that are issued based on weak or no authentication of authorizing users and/or OAuth clients SHOULD NOT be used, unless, for example, they are being used as single-use tokens to permit one-time requests such as anonymous registration (see Section 3.3).  For security considerations regarding the use of bearer tokens in SCIM, see Section 7.4.  While bearer tokens most often represent an authorization, it is assumed that the authorization was based upon a successful authentication of the SCIM client.  Accordingly, the SCIM service provider must have a method for validating, parsing, and/or "introspecting" the bearer token for the relevant authentication and authorization information.  The method for this is assumed to be defined by the token-issuing system and is beyond the scope of this specification.</t>
  <t hangText="PoP Tokens">
  A proof-of-possession (PoP) token demonstrates that the presenter of the token possesses a particular key and that the recipient can cryptographically confirm proof of possession of the key by the presenter.  This property is sometimes also described as the presenter being a holder of the key.  See <eref target="https://datatracker.ietf.org/doc/html/rfc7644#ref-OAuth-PoP-Arch">OAuth-PoP-Arch</eref> for an example of such a token and its use.</t>
  <t hangText="Cookies">
  JavaScript clients MAY assert HTTP cookies over TLS that contain an authentication state that is understood by the SCIM service provider (see <eref target="https://datatracker.ietf.org/doc/html/rfc6265">RFC6265</eref>).  An example of this is scenarios where web-form authentication has taken place with the user and HTTP cookies were set representing the authentication state.  For the purposes of SCIM, the security considerations in Section 7.4 apply.</t>
  <t hangText="Basic Authentication">
  Usage of basic authentication should be avoided, due to its use of a single factor that is based upon a relatively static, symmetric secret.  Implementers SHOULD combine the use of basic authentication with other factors.  The security considerations of HTTP Basic are well documented in <eref target="https://datatracker.ietf.org/doc/html/rfc7644#ref-HTTP-BASIC-AUTH">HTTP-BASIC-AUTH</eref>; therefore, implementers are encouraged to use stronger authentication methods.  Designating the specific methods of authentication and authorization is out of scope for SCIM; however, this information is provided as a resource to implementers.

As per Section 4.1 of <eref target="https://datatracker.ietf.org/doc/html/rfc7235">RFC7235</eref>, a SCIM service provider SHALL
 indicate supported HTTP authentication schemes via the
 "WWW-Authenticate" header.
Regardless of methodology, the SCIM service provider MUST be able to
 map the authenticated client to an access control policy in order to
 determine the client's authorization to retrieve and update SCIM
 resources.  For example, while a browser session may have been
 established via HTTP cookie or TLS client authentication, the unique
 client MUST be mapped to a security subject (e.g., User).  The
 authorization model and the process by which this is done are beyond
 the scope of this specification.
When processing requests, the service provider SHOULD consider the
 subject performing the request and whether or not the action is
 appropriate given the subject and the resource affected by the
 request.  The subject performing the request is usually determined
 directly or indirectly from the "Authorization" header present in the
 request.  For example, a subject MAY be permitted to retrieve and
 update their own "User" resource but will normally have restricted
 ability to access resources associated with other Users.  In other
 cases, the SCIM service provider might only grant access to a
 subject's own associated "User" resource (e.g., for the purpose of
 updating personal contact attributes).
For illustrative purposes only, SCIM protocol examples show an
 OAuth 2.0 bearer token value <eref target="https://datatracker.ietf.org/doc/html/rfc6750">RFC6750</eref> in the authorization
 header, e.g.,</t>
</list></t>

<figure><artwork><![CDATA[
   GET /Users/2819c223-7f76-453a-919d-413861904646 HTTP/1.1
   Host: example.com
   Authorization: Bearer h480djs93hd8
]]></artwork></figure>

<t>This is not intended to imply that bearer tokens are preferred.
   However, the use of bearer tokens in the specification does reflect
   common implementation practice.</t>

<section anchor="use-of-tokens-as-authorizations" title="Use of Tokens as Authorizations">

<t>When using bearer tokens or PoP tokens that represent an
   authorization grant, such as a grant issued by OAuth (see <eref target="https://datatracker.ietf.org/doc/html/rfc6749">RFC6749</eref>),
   implementers SHOULD consider the type of authorization granted, any
   authorized scopes (see Section 3.3 of <eref target="https://datatracker.ietf.org/doc/html/rfc6749">RFC6749</eref>), and the security
   subject(s) that SHOULD be mapped from the authorization when
   considering local access control rules.  Section 6 of <eref target="https://datatracker.ietf.org/doc/html/rfc7521">RFC7521</eref>
   documents common scenarios for authorization, including:</t>

<t>o  A client using an assertion to authenticate and/or act on behalf
      of itself,</t>

<t>o  A client acting on behalf of a user, and</t>

<t>o  A client acting on behalf of an anonymous user (for example, see
      Section 2.2).</t>

<t>When using OAuth authorization tokens, implementers MUST take into
   account the threats and countermeasures related to the use of client
   authorizations, as documented in Section 8 of <eref target="https://datatracker.ietf.org/doc/html/rfc7521">RFC7521</eref>.  When using
   other token formats or frameworks, implementers MUST take into
   account similar threats and countermeasures, especially those
   documented by the relevant specifications.</t>

</section>
<section anchor="anonymous-requests" title="Anonymous Requests">

<t>In some SCIM deployments, it MAY be acceptable to permit
   unauthenticated (anonymous) requests â€“ for example, a user
   self-registration request where the service provider chooses to
   accept a SCIM Create request (see Section 3.3) from an anonymous
   client.  See Section 7.6 for security considerations regarding
   anonymous requests.</t>

</section>
</section>
<section anchor="scim-protocol" title="SCIM Protocol">

<section anchor="background" title="Background">

<t>SCIM is a protocol that is based on HTTP <eref target="https://datatracker.ietf.org/doc/html/rfc7230">RFC7230</eref>.  Along with HTTP
   headers and URIs, SCIM uses JSON <eref target="https://datatracker.ietf.org/doc/html/rfc7159">RFC7159</eref> payloads to convey SCIM
   resources, as well as protocol-specific payload messages that convey
   request parameters and response information such as errors.  Both
   resources and messages are passed in the form of JSON-based
   structures in the message body of an HTTP request or response.  To
   identify this content, SCIM uses a media type of
   "application/scim+json" (see Section 8.1).</t>

<t>A SCIM "resource" is a JSON object <eref target="https://datatracker.ietf.org/doc/html/rfc7159">RFC7159</eref> that may be created,
   maintained, and retrieved via HTTP request methods as described in
   this document.  Each JSON resource representation contains a
   "schemas" attribute that contains a list of one or more URIs that
   indicate included SCIM schemas that are used to indicate the
   attributes contained within a resource.  Specific information about
   what attributes are defined within a schema MAY be obtained by
   querying a SCIM service provider's "/Schemas" endpoint for a schema
   definition (see Section 8.7 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).  Responses from this
   endpoint describe the schema supported by a service provider,
   including attribute characteristics such as cardinality,
   case-exactness, mutability, uniqueness, returnability, and whether or
   not attributes are required.  While SCIM schemas and an associated
   extension model are defined in <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>, SCIM clients should expect
   that some attribute schema may change from service provider to
   service provider, particularly across administrative domains.  In
   cases where SCIM may be used as an open protocol in front of an
   application service, it is quite reasonable to expect that some
   service providers may only support a subset of the schema defined in
   <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.</t>

<t>A SCIM message conveys protocol parameters related to a SCIM request
   or response; this specification defines these parameters.  As with a
   SCIM resource, a SCIM message is a JSON object <eref target="https://datatracker.ietf.org/doc/html/rfc7159">RFC7159</eref> that
   contains a "schemas" attribute with a URI whose namespace prefix MUST
   begin with "urn:ietf:params:scim:api:".  As SCIM protocol messages
   are fixed and defined by SCIM specifications and registered
   extensions, SCIM message schemas using the above prefix URN SHALL NOT
   be discoverable using the "/Schemas" endpoint.</t>

<t>As SCIM is intended for use in cross-domain scenarios where schema
   and implementations may vary, techniques such as document validation
   (e.g., <eref target="https://datatracker.ietf.org/doc/html/rfc7644#ref-XML-Schema">XML-Schema</eref>) are not recommended.  A SCIM service provider
   interprets a request in the context of its own schema (which may be
   different from the client's schema) and following the defined
   processing rules for each request.  The sections that follow define
   the processing rules for SCIM and provide allowances for schema
   differences where appropriate.  For example, in a SCIM PUT request,
   "readOnly" attributes are ignored, while "readWrite" attributes are
   updated.  There is no need for a SCIM client to discover which
   attributes are "readOnly", and the client does not need to remove
   them from a PUT request in order to be accepted.  Similarly, a SCIM
   client SHOULD NOT expect a service provider to return SCIM resources
   with exactly the same schema and values as submitted.  SCIM responses
   SHALL reflect resource state as interpreted by the SCIM service
   provider.</t>

</section>
<section anchor="scim-endpoints-and-http-methods" title="SCIM Endpoints and HTTP Methods">

<t>The SCIM protocol specifies well-known endpoints and HTTP methods for
   managing resources defined in the SCIM Core Schema document
   (<eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>); i.e., "User" and "Group" resources correspond to
   "/Users" and "/Groups", respectively.  Service providers that support
   extended resources SHOULD define resource endpoints using the
   convention of pluralizing the resource name defined in the extended
   schema, by appending an 's'.  Given that there are cases where
   resource pluralization is ambiguous, e.g., a resource named "Person"
   is legitimately "Persons" and "People", clients SHOULD discover
   resource endpoints via the "/ResourceTypes" endpoint.</t>

<texttable title="SCIM HTTP Methods">
      <ttcol align='left'>HTTP Method</ttcol>
      <ttcol align='left'>SCIM Usage</ttcol>
      <c>GET</c>
      <c>Retrieves one or more complete or partial resources</c>
      <c>POST</c>
      <c>Depending on the endpoint, creates new resources, creates a search request, or MAY be used to bulk-modify resources.</c>
      <c>PUT</c>
      <c>Modifies a resource by replacing existing attributes with a specified set of replacement attributes (replace).  PUT MUST NOT be used to create new resources.</c>
      <c>PATCH</c>
      <c>Modifies a resource with a set of client-specified changes (partial update).</c>
      <c>DELETE</c>
      <c>Deletes a resource.</c>
</texttable>

<texttable title="Defined Endpoints">
      <ttcol align='left'>Resource</ttcol>
      <ttcol align='left'>Endpoint</ttcol>
      <ttcol align='left'>Operations</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>User TEST</c>
      <c>/Users</c>
      <c>GET (Section 3.4.1), POST (Section 3.3), PUT (Section 3.5.1), PATCH(Section 3.5.2), DELETE(Section 3.6)</c>
      <c>Retrieve, add, modify Users.</c>
      <c>Group</c>
      <c>/Groups</c>
      <c>GET (Section 3.4.1), POST (Section 3.3), PUT (Section 3.5.1), PATCH (Section 3.5.2), DELETE (Section 3.6)</c>
      <c>Retrieve, add, modify Groups</c>
      <c>Self</c>
      <c>/Me</c>
      <c>GET, POST, PUT, PATCH, DELETE (Section 3.11)</c>
      <c>Alias for operations against a resource mapped to an authenticated subject (e.g., User)</c>
      <c>Service provider config.</c>
      <c>/ServiceProvider Config</c>
      <c>GET (Section 4)</c>
      <c>Retrieve service provider's configuration.</c>
      <c>Schema</c>
      <c>/Schemas</c>
      <c>GET (Section 4)</c>
      <c>Retrieve one or more supported schemas.</c>
      <c>Bulk</c>
      <c>/Bulk</c>
      <c>POST (Section 3.7)</c>
      <c>Bulk updates to one or more resources.</c>
      <c>Search</c>
      <c>[prefix]/.search</c>
      <c>POST (Section 3.4.3)</c>
      <c>Search from system root or within a resource endpoint for one or more resource types using POST.</c>
</texttable>

<t>All requests to the service provider are made via HTTP methods as per
   Section 4.3 of [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231 on a URL derived from the Base URL.
   Responses are returned in the body of the HTTP response, formatted as
   JSON.  Error status codes SHOULD be transmitted via the HTTP status
   code of the response (if possible) and SHOULD also be specified in
   the body of the response (see Section 3.12).</t>

</section>
<section anchor="creating-resources" title="Creating Resources">

<t>To create new resources, clients send HTTP POST requests to the
   resource endpoint, such as "/Users" or "/Groups", as defined by the
   associated resource type endpoint discovery (see Section 4).</t>

<t>The server SHALL process attributes according to the following
   mutability rules:</t>

<t>o  In the request body, attributes whose mutability is "readOnly"
      (see Sections 2.2 and 7 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>) SHALL be ignored.</t>

<t>o  Attributes whose mutability is "readWrite" (see Section 2.2 of
      <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>) and that are omitted from the request body MAY be
      assumed to be not asserted by the client.  The service provider
      MAY assign a default value to non-asserted attributes in the final
      resource representation.</t>

<t>o  Service providers MAY take into account whether or not a client
      has access to all of the resource's attributes when deciding
      whether or not non-asserted attributes should be defaulted.</t>

<t>o  Clients that intend to override existing or server-defaulted
      values for attributes MAY specify "null" for a single-valued
      attribute or an empty array "[]" for a multi-valued attribute to
      clear all values.</t>

<t>When the service provider successfully creates the new resource, an
   HTTP response SHALL be returned with HTTP status code 201 (Created).
   The response body SHOULD contain the service provider's
   representation of the newly created resource.  The URI of the created
   resource SHALL include, in the HTTP "Location" header and the HTTP
   body, a JSON representation <eref target="https://datatracker.ietf.org/doc/html/rfc7159">RFC7159</eref> with the attribute
   "meta.location".  Since the server is free to alter and/or ignore
   POSTed content, returning the full representation can be useful to
   the client, enabling it to correlate the client's and server's views
   of the new resource.</t>

<t>If the service provider determines that the creation of the requested
   resource conflicts with existing resources (e.g., a "User" resource
   with a duplicate "userName"), the service provider MUST return HTTP
   status code 409 (Conflict) with a "scimType" error code of
   "uniqueness", as per Section 3.12.</t>

<t>In the following example, a client sends a POST request containing a
   "User" to the "/Users" endpoint.</t>

<figure><artwork><![CDATA[
   POST /Users  HTTP/1.1
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   Content-Length: ...

   {
     "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
     "userName":"bjensen",
     "externalId":"bjensen",
     "name":{
       "formatted":"Ms. Barbara J Jensen III",
       "familyName":"Jensen",
       "givenName":"Barbara"
     }
   }

]]></artwork></figure>
<figure><artwork><![CDATA[
In response to the example request above, the server signals a
successful creation with an HTTP status code 201 (Created) and
returns a representation of the resource created:


   HTTP/1.1 201 Created
   Content-Type: application/scim+json
   Location:
https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
   ETag: W/"e180ee84f0671b1"

   {
     "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
     "id":"2819c223-7f76-453a-919d-413861904646",
     "externalId":"bjensen",
     "meta":{
       "resourceType":"User",
       "created":"2011-08-01T21:32:44.882Z",
       "lastModified":"2011-08-01T21:32:44.882Z",
       "location":
"https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646",
       "version":"W\/\"e180ee84f0671b1\""
     },
     "name":{
       "formatted":"Ms. Barbara J Jensen III",
       "familyName":"Jensen",
       "givenName":"Barbara"
     },
     "userName":"bjensen"
   }

]]></artwork></figure>

<section anchor="resource-types" title="Resource Types">

<t>When adding a resource to a specific endpoint, the meta attribute
   "resourceType" SHALL be set by the HTTP service provider to the
   corresponding resource type for the endpoint.  For example, a POST to
   the endpoint "/Users" will set "resourceType" to "User", and
   "/Groups" will set "resourceType" to "Group".</t>

</section>
</section>
<section anchor="retrieving-resources" title="Retrieving Resources">

<t>Resources MAY be retrieved via opaque, unique URLs or via queries
   (see Section 3.4.2).  The attributes returned are defined in the
   server's attribute schema (see Section 8.7 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>) and may be
   modified by request parameters (see Section 3.9).  By default,
   resource attributes returned in a response are those attributes whose
   characteristic "returned" setting is "always" or "default" (see
   Section 2.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).</t>

<section anchor="retrieving-a-known-resource" title="Retrieving a Known Resource">

<t>To retrieve a known resource, clients send GET requests to the
   resource endpoint, e.g., "/Users/{id}", "/Groups/{id}", or
   "/Schemas/{id}", where "{id}" is a resource identifier (for example,
   the value of the "id" attribute).</t>

<t>If the resource exists, the server responds with HTTP status code 200
   (OK) and includes the result in the body of the response.</t>

<figure><artwork><![CDATA[
The example below retrieves a single User via the "/Users" endpoint.


GET /Users/2819c223-7f76-453a-919d-413861904646
Host: example.com
Accept: application/scim+json
Authorization: Bearer h480djs93hd8

The server responds with:

HTTP/1.1 200 OK
Content-Type: application/scim+json
Location:
  https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
ETag: W/"f250dd84f0671c3"

{
  "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
  "id":"2819c223-7f76-453a-919d-413861904646",
  "externalId":"bjensen",
  "meta":{
    "resourceType":"User",
    "created":"2011-08-01T18:29:49.793Z",
    "lastModified":"2011-08-01T18:29:49.793Z",
    "location":
"https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646",
    "version":"W\/\"f250dd84f0671c3\""
  },
  "name":{
    "formatted":"Ms. Barbara J Jensen III",
    "familyName":"Jensen",
    "givenName":"Barbara"
  },
  "userName":"bjensen",
  "phoneNumbers":[
    {
      "value":"555-555-8377",
      "type":"work"
    }
  ],
  "emails":[
    {
      "value":"bjensen@example.com",
      "type":"work"
    }
  ]
}

]]></artwork></figure>

</section>
<section anchor="query-resources" title="Query Resources">

<t>The SCIM protocol defines a standard set of query parameters that can
   be used to filter, sort, and paginate to return zero or more
   resources in a query response.  Queries MAY be made against a single
   resource or a resource type endpoint (e.g., "/Users"), or the service
   provider Base URI.  SCIM service providers MAY support additional
   query parameters not specified here and SHOULD ignore any query
   parameters they do not recognize instead of rejecting the query for
   versioning compatibility reasons.</t>

<t>Responses MUST be identified using the following URI:
   "urn:ietf:params:scim:api:messages:2.0:ListResponse".  The following
   attributes are defined for responses:</t>

<t><list style="hanging">
  <t hangText="totalResults">
  The total number of results returned by the list or query operation.  The value may be larger than the number of resources returned, such as when returning a single page (see Section 3.4.2.4) of results where multiple pages are available. REQUIRED.</t>
  <t hangText="Resources">
  A multi-valued list of complex objects containing the requested resources.  This MAY be a subset of the full set of resources if pagination (Section 3.4.2.4) is requested.  REQUIRED if "totalResults" is non-zero.</t>
  <t hangText="startIndex">
  The 1-based index of the first result in the current set of list results.  REQUIRED when partial results are returned due to pagination.</t>
  <t hangText="itemsPerPage">
  The number of resources returned in a list response page. REQUIRED when partial results are returned due to pagination.

A query that does not return any matches SHALL return success (HTTP
 status code 200) with "totalResults" set to a value of 0.</t>
</list></t>

<figure><artwork><![CDATA[
   The example query below requests the userName for all Users:

   GET /Users?attributes=userName
   Host: example.com
   Accept: application/scim+json
   Authorization: Bearer h480djs93hd8

   The following is an example response to the query above:

   HTTP/1.1 200 OK
   Content-Type: application/scim+json

   {
     "schemas":["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
     "totalResults":2,
     "Resources":[
       {
         "id":"2819c223-7f76-453a-919d-413861904646",
         "userName":"bjensen"
       },
       {
         "id":"c75ad752-64ae-4823-840d-ffa80929976c",
         "userName":"jsmith"
       }
     ]
   }

   Note that in the above example, "id" is returned because the "id"
   attribute has the "returned" characteristic of "always".
]]></artwork></figure>

<section anchor="query-endpoints" title="Query Endpoints">

<t>Queries MAY be performed against a SCIM resource object, a resource
   type endpoint, or a SCIM server root.  For example:</t>

<figure><artwork><![CDATA[
  "/Users/{id}"

  "/Users"

  "/Groups"
]]></artwork></figure>

<t>A query against a server root indicates that all resources within the
   server SHALL be included, subject to filtering.  A filter expression
   using "meta.resourceType" MAY be used to restrict results to one or
   more specific resource types (to exclude others).  For example:</t>

<t>filter=(meta.resourceType eq User) or (meta.resourceType eq Group)</t>

<t>If a SCIM service provider determines that too many results would be
   returned (e.g., because a client queried a resource type endpoint or
   the server base URI), the server SHALL reject the request by
   returning an HTTP response with HTTP status code 400 (Bad Request)
   and JSON attribute "scimType" set to "tooMany" (see Table 9).</t>

<t>When processing query operations using endpoints that include more
   than one SCIM resource type (e.g., a query from the server root
   endpoint), filters MUST be processed as outlined in Section 3.4.2.2.
   For filtered attributes that are not part of a particular resource
   type, the service provider SHALL treat the attribute as if there is
   no attribute value.  For example, a presence or equality filter for
   an undefined attribute evaluates to false.</t>

</section>
<section anchor="filtering" title="Filtering">

<t>Filtering is an OPTIONAL parameter for SCIM service providers.
   Clients MAY discover service provider filter capabilities by looking
   at the "filter" attribute of the "ServiceProviderConfig" endpoint
   (see Section 4).  Clients MAY request a subset of resources by
   specifying the "filter" query parameter containing a filter
   expression.  When specified, only those resources matching the filter
   expression SHALL be returned.  The expression language that is used
   with the filter parameter supports references to attributes and
   literals.</t>

<t>Attribute names and attribute operators used in filters are case
   insensitive.  For example, the following two expressions will
   evaluate to the same logical value:</t>

<t>filter=userName Eq "john"</t>

<t>filter=Username eq "john"</t>

<t>The filter parameter MUST contain at least one valid expression (see
   Table 3).  Each expression MUST contain an attribute name followed by
   an attribute operator and optional value.  Multiple expressions MAY
   be combined using logical operators (see Table 4).  Expressions MAY
   be grouped together using round brackets "(" and ")" (see Table 5).</t>

<t>The operators supported in the expression are listed in Table 3.</t>

<texttable title="Attribute Operators">
      <ttcol align='left'>Operator</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Behavior</ttcol>
      <c>eq</c>
      <c>equal</c>
      <c>The attribute and operator values must be identical for a match.</c>
      <c>ne</c>
      <c>not equal</c>
      <c>The attribute and operator values are not identical.</c>
      <c>co</c>
      <c>contains</c>
      <c>The entire operator value must be a substring of the attribute value for a match.</c>
      <c>sw</c>
      <c>starts with</c>
      <c>The entire operator value must be a substring of the attribute value, starting at the beginning of the attribute value. This criterion is satisfied if the two strings are identical.</c>
      <c>ew</c>
      <c>ends with</c>
      <c>The entire operator value must be a substring of the attribute value, matching at the end of the attribute value. This criterion is satisfied if the two strings are identical.</c>
      <c>pr</c>
      <c>present (has value)</c>
      <c>If the attribute has a non-empty or non-null value, or if it contains a non-empty node for complex attributes, there is a match.</c>
      <c>gt</c>
      <c>greater than</c>
      <c>If the attribute value is greater than the operator value, there is a match. The actual comparison is dependent on the attribute type.  For string attribute types, this is a lexicographical comparison, and for DateTime types, it is a chronological comparison. For integer attributes, it is a comparison by numeric value. Boolean and Binary attributes SHALL cause a failed response (HTTP status code 400) with "scimType" of "invalidFilter".</c>
      <c>ge</c>
      <c>greater than or equal to</c>
      <c>If the attribute value is greater than or equal to the operator value, there is a match.  The actual comparison is dependent on the attribute type.  For string attribute types, this is a lexicographical comparison, and for DateTime types, it is a chronological comparison.  For integer attributes, it is a comparison by numeric value. Boolean and Binary attributes SHALL cause a failed response (HTTP status code 400) with "scimType" of "invalidFilter".</c>
      <c>lt</c>
      <c>less than</c>
      <c>If the attribute value is less than the operator value, there is a match.  The actual comparison is dependent on the attribute type.  For string attribute types, this is a lexicographical comparison, and for DateTime types, it is a chronological comparison.  For integer attributes, it is a comparison by numeric value.  Boolean and Binary attributes SHALL cause a failed response (HTTP status code 400) with "scimType" of "invalidFilter".</c>
      <c>le</c>
      <c>less than or equal to</c>
      <c>If the attribute value is less than or equal to the operator value, there is a  match.  The actual comparison is dependent on the attribute type.  For string attribute types, this is a lexicographical comparison, and for DateTime types, it is a chronological comparison.  For integer attributes, it is a comparison by numeric value. Boolean and Binary attributes SHALL cause a failed response (HTTP status code 400) with "scimType" of "invalidFilter".</c>
</texttable>

<texttable title="Logical Operators">
      <ttcol align='left'>Operator</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Behavior</ttcol>
      <c>and</c>
      <c>Logical "and"</c>
      <c>The filter is only a match if both expressions evaluate to true.</c>
      <c>or</c>
      <c>Logical "or"</c>
      <c>The filter is a match if either expression evaluates to true.</c>
      <c>not</c>
      <c>"Not" function</c>
      <c>The filter is a match if the expression evaluates to false.</c>
</texttable>

<texttable title="Grouping Operators">
      <ttcol align='left'>Operator</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Behavior</ttcol>
      <c>( )</c>
      <c>Precedence grouping</c>
      <c>Boolean expressions MAY be grouped using parentheses to change the standard order of operations, i.e., to evaluate logical "or" operators before logical "and" operators.</c>
      <c>[ ]</c>
      <c>Complex attribute filter grouping</c>
      <c>Service providers MAY support complex filters where expressions MUST be applied to the same value of a parent attribute specified immediately before the left square bracket ("[").  The expression within square brackets ("[" and "]") MUST be a valid filter expression based upon sub-attributes of the parent attribute.  Nested expressions MAY be used.  See examples below.</c>
</texttable>

<t>SCIM filters MUST conform to the following ABNF <eref target="https://datatracker.ietf.org/doc/html/rfc5234">RFC5234</eref> rules as specified below:</t>

<figure><artwork type="abnf"><![CDATA[
     FILTER    = attrExp / logExp / valuePath / *1"not" "(" FILTER ")"

     valuePath = attrPath "[" valFilter "]"
                 ; FILTER uses sub-attributes of a parent attrPath

     valFilter = attrExp / logExp / *1"not" "(" valFilter ")"

     attrExp   = (attrPath SP "pr") /
                 (attrPath SP compareOp SP compValue)

     logExp    = FILTER SP ("and" / "or") SP FILTER

     compValue = false / null / true / number / string
                 ; rules from JSON (RFC 7159)

     compareOp = "eq" / "ne" / "co" /
                        "sw" / "ew" /
                        "gt" / "lt" /
                        "ge" / "le"

     attrPath  = [URI ":"] ATTRNAME *1subAttr
                 ; SCIM attribute name
                 ; URI is SCIM "schema" URI

     ATTRNAME  = ALPHA *(nameChar)

     nameChar  = "-" / "_" / DIGIT / ALPHA

     subAttr   = "." ATTRNAME
                 ; a sub-attribute of a complex attribute

               Figure 1: ABNF Specification of SCIM Filters
]]></artwork></figure>

<t>In the above ABNF rules, the "compValue" (comparison value) rule is
   built on JSON Data Interchange format ABNF rules as specified in
   <eref target="https://datatracker.ietf.org/doc/html/rfc7159">RFC7159</eref>, "DIGIT" and "ALPHA" are defined per Appendix B.1 of
   <eref target="https://datatracker.ietf.org/doc/html/rfc5234">RFC5234</eref>, and "URI" is defined per Appendix A of <eref target="https://datatracker.ietf.org/doc/html/rfc3986">RFC3986</eref>.</t>

<t>Filters MUST be evaluated using the following order of operations, in
   order of precedence:</t>

<t><list style="numbers">
  <t>Grouping operators</t>
  <t>Logical operators - where "not" takes precedence over "and",
which takes precedence over "or"</t>
  <t>Attribute operators</t>
</list></t>

<t>If the specified attribute in a filter expression is a multi-valued
   attribute, the filter matches if any of the values of the specified
   attribute match the specified criterion; e.g., if a User has multiple
   "emails" values, only one has to match for the entire User to match.
   For complex attributes, a fully qualified sub-attribute MUST be
   specified using standard attribute notation (Section 3.10).  For
   example, to filter by userName, the parameter value is "userName".
   To filter by first name, the parameter value is "name.givenName".</t>

<t>When applying a comparison (e.g., "eq") or presence filter (e.g.,
   "pr") to a defaulted attribute, the service provider SHALL use the
   value that was returned to the client that last created or modified
   the attribute.</t>

<t>Providers MAY support additional filter operations if they choose.
   Providers MUST decline to filter results if the specified filter
   operation is not recognized and return an HTTP 400 error with a
   "scimType" error of "invalidFilter" and an appropriate human-readable
   response as per Section 3.12.  For example, if a client specified an
   unsupported operator named 'regex', the service provider should
   specify an error response description identifying the client error,
   e.g., 'The operator 'regex' is not supported.'</t>

<t>When comparing attributes of type String, the case sensitivity for
   String type attributes SHALL be determined by the attribute's
   "caseExact" characteristic (see Section 2.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).</t>

<t>Clients MAY query by schema or schema extensions by using a filter
   expression including the "schemas" attribute (as shown in Figure 2).</t>

<t>The following are examples of valid filters.  Some attributes (e.g.,
   rooms and rooms.number) are hypothetical extensions and are not part
   of the SCIM core schema:</t>

<t>filter=userName eq "bjensen"</t>

<t>filter=name.familyName co "O'Malley"</t>

<t>filter=userName sw "J"</t>

<t>filter=urn:ietf:params:scim:schemas:core:2.0:User:userName sw "J"</t>

<t>filter=title pr</t>

<t>filter=meta.lastModified gt "2011-05-13T04:42:34Z"</t>

<t>filter=meta.lastModified ge "2011-05-13T04:42:34Z"</t>

<t>filter=meta.lastModified lt "2011-05-13T04:42:34Z"</t>

<t>filter=meta.lastModified le "2011-05-13T04:42:34Z"</t>

<t>filter=title pr and userType eq "Employee"</t>

<t>filter=title pr or userType eq "Intern"</t>

<t>filter=
 schemas eq "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"</t>

<t>filter=userType eq "Employee" and (emails co "example.com" or
  emails.value co "example.org")</t>

<t>filter=userType ne "Employee" and not (emails co "example.com" or
  emails.value co "example.org")</t>

<t>filter=userType eq "Employee" and (emails.type eq "work")</t>

<t>filter=userType eq "Employee" and emails[type eq "work" and
  value co "@example.com"]</t>

<t>filter=emails[type eq "work" and value co "@example.com"] or
  ims[type eq "xmpp" and value co "@foo.com"]</t>

<figure><artwork><![CDATA[
                     Figure 2: Example Filters
]]></artwork></figure>

</section>
<section anchor="sorting" title="Sorting">

<t>Sort is OPTIONAL.  Clients MAY discover sort capability by looking at
   the "sort" attribute of the service provider configuration (see
   Section 4).  Sorting allows clients to specify the order in which
   resources are returned by specifying a combination of "sortBy" and
   "sortOrder" URL parameters.</t>

<t><list style="hanging">
  <t hangText="sortBy">
  The "sortBy" parameter specifies the attribute whose value SHALL be used to order the returned responses.  If the "sortBy" attribute corresponds to a singular attribute, resources are sorted according to that attribute's value; if it's a multi-valued      attribute, resources are sorted by the value of the primary attribute (see Section 2.4 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>), if any, or else the first value in the list, if any.  If the attribute is complex, the attribute name must be a path to a sub-attribute in standard attribute notation (Section 3.10), e.g., "sortBy=name.givenName". For all attribute types, if there is no data for the specified "sortBy" value, they are sorted via the "sortOrder" parameter, i.e., they are ordered last if ascending and first if descending.</t>
  <t hangText="sortOrder">
  The order in which the "sortBy" parameter is applied. Allowed values are "ascending" and "descending".  If a value for "sortBy" is provided and no "sortOrder" is specified, "sortOrder" SHALL default to ascending.  String type attributes are case insensitive by default, unless the attribute type is defined as a case-exact string.  "sortOrder" MUST sort according to the attribute type; i.e., for case-insensitive attributes, sort the result using case-insensitive Unicode alphabetic sort order with no specific locale implied, and for case-exact attribute types, sort the result using case-sensitive Unicode alphabetic sort order.</t>
</list></t>

</section>
<section anchor="pagination" title="Pagination">

<t>Pagination parameters can be used together to "page through" large
   numbers of resources so as not to overwhelm the client or service
   provider.  Because pagination is not stateful, clients MUST be
   prepared to handle inconsistent results.  For example, a request for
   a list of 10 resources beginning with a startIndex of 1 MAY return
   different results when repeated, since resources on the service
   provider may have changed between requests.  Pagination parameters
   and general behavior are derived from the OpenSearch Protocol
   <eref target="TODOURL">OpenSearch</eref>.</t>

<texttable title="Pagination Request Parameters">
      <ttcol align='left'>Parameter</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Default</ttcol>
      <c>startIndex</c>
      <c>The 1-based index of the first query result. A value less than 1 SHALL be interpreted as 1.</c>
      <c>1</c>
      <c>count</c>
      <c>Non-negative integer. Specifies the desired maximum number of query results per page, e.g., 10. A negative value SHALL be interpreted as "0". A value of "0" indicates that no resource results are to be returned except for "totalResults".</c>
      <c>None. When specified, the service provider MUST NOT return more results than specified, although it MAY return fewer results. If unspecified, the maximum number of results is set by the service provider.</c>
</texttable>

<t>Table 7 describes the query response pagination attributes specified
   by the service provider.</t>

<texttable title="Pagination Response Elements">
      <ttcol align='left'>Element</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>itemsPerPage</c>
      <c>Non-negative integer. Specifies the number of query results returned in a query response page, e.g., 10.</c>
      <c>totalResults</c>
      <c>Non-negative integer. Specifies the total number of results matching the client query, e.g., 1000.</c>
      <c>startIndex</c>
      <c>The 1-based index of the first result in the current set of query results, e.g., 1.</c>
</texttable>

<figure><artwork><![CDATA[
   For example, to retrieve the first 10 Users, set the startIndex to 1
   and the count to 10:

   GET /Users?startIndex=1&count=10
   Host: example.com
   Accept: application/scim+json
   Authorization: Bearer h480djs93hd8

   The response to the query above returns metadata regarding paging
   similar to the following example (actual resources removed for
   brevity):

   {
     "totalResults":100,
     "itemsPerPage":10,
     "startIndex":1,
     "schemas":["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
     "Resources":[{
       ...
     }]
   }

      Figure 3: ListResponse Format for Returning Multiple Resources

   Given the example above, to continue paging, set the startIndex to 11
   and re-fetch, i.e., /Users?startIndex=11&count=10.
]]></artwork></figure>

</section>
<section anchor="attributes" title="Attributes">

<t>The following attributes control which attributes SHALL be returned
   with a returned resource.  SCIM clients MAY use one of these two
   OPTIONAL parameters, which MUST be supported by SCIM service
   providers:</t>

<t><list style="hanging">
  <t hangText="attributes">
  A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.  Attribute names MUST be in standard attribute notation (Section 3.10) form.  See Section 3.9 for additional retrieval query parameters.</t>
  <t hangText="excludedAttributes">
  A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return.  This parameter SHALL have no effect on attributes whose schema "returned" setting is "always" (see Sections 2.2 and 7 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).  Attribute names MUST be in standard attribute notation (Section 3.10) form.  See Section 3.9 for additional retrieval query parameters.</t>
</list></t>

</section>
</section>
<section anchor="querying-resources-using-http-post" title="Querying Resources Using HTTP POST">

<t>Clients MAY execute queries without passing parameters on the URL by
   using the HTTP POST verb combined with the "/.search" path extension.
   The inclusion of "/.search" on the end of a valid SCIM endpoint SHALL
   be used to indicate that the HTTP POST verb is intended to be a query
   operation.</t>

<t>To create a new query result set, a SCIM client sends an HTTP POST
   request to the desired SCIM resource endpoint (ending in "/.search").
   The body of the POST request MAY include any of the parameters
   defined in Section 3.4.2.</t>

<t>Query requests MUST be identified using the following URI:
   "urn:ietf:params:scim:api:messages:2.0:SearchRequest".  The following
   attributes are defined for query requests:</t>

<t><list style="hanging">
  <t hangText="attributes">
  A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.  Attribute names MUST be in standard attribute notation (Section 3.10) form.  See Section 3.9 for additional retrieval query parameters.  OPTIONAL.</t>
  <t hangText="excludedAttributes">
  A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return.  This parameter SHALL have no effect on attributes whose schema "returned" setting is "always" (see
Sections 2.2 and 7 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).  Attribute names MUST be in standard attribute notation (Section 3.10) form.  See Section 3.9 for additional retrieval query parameters.  OPTIONAL.</t>
  <t hangText="filter">
  The filter string used to request a subset of resources.  The filter string MUST be a valid filter (Section 3.4.2.2) expression. OPTIONAL.</t>
  <t hangText="sortBy">
  A string indicating the attribute whose value SHALL be used to order the returned responses.  The "sortBy" attribute MUST be in standard attribute notation (Section 3.10) form.  See Section 3.4.2.3.  OPTIONAL.</t>
  <t hangText="sortOrder">
  A string indicating the order in which the "sortBy" parameter is applied.  Allowed values are "ascending" and "descending".  See Section 3.4.2.3.  OPTIONAL.</t>
  <t hangText="startIndex">
  An integer indicating the 1-based index of the first query result.  See Section 3.4.2.4.  OPTIONAL.
count</t>
  <t>An integer indicating the desired maximum number of query results per page.  See Section 3.4.2.4.  OPTIONAL.</t>
</list></t>

<t>After receiving an HTTP POST request, a response is returned as specified in Section 3.4.2.</t>

<t>The following example shows an HTTP POST Query request with search
   parameters "attributes", "filter", and "count" included:</t>

<figure><artwork><![CDATA[
   POST /.search
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   Content-Length: ...

   {
     "schemas": ["urn:ietf:params:scim:api:messages:2.0:SearchRequest"],
     "attributes": ["displayName", "userName"],
     "filter":
       "displayName sw \"smith\"",
     "startIndex": 1,
     "count": 10
   }

                   Figure 4: Example POST Query Request
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<t>The example below shows a query response with the first page of
   results.  For brevity, only two matches are shown: one User and
   one Group.</t>

<figure><artwork><![CDATA[
   HTTP/1.1 200 OK
   Content-Type: application/scim+json
   Location: https://example.com/.search

   {
     "schemas": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
     "totalResults":100,
     "itemsPerPage":10,
     "startIndex":1,
     "Resources":[
       {
         "id":"2819c223-7f76-413861904646",
         "userName":"jsmith",
         "displayName":"Smith, James"
       },
       {
         "id":"c8596b90-7539-4f20968d1908",
         "displayName":"Smith Family"
       },
        ...
     ]
   }

                   Figure 5: Example POST Query Response

]]></artwork></figure>

</section>
</section>
<section anchor="modifying-resources" title="Modifying Resources">

<t>Resources can be modified in whole or in part using HTTP PUT or HTTP
   PATCH, respectively.  Implementers MUST support HTTP PUT as specified
   in Section 4.3 of [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231.  Resources such as Groups may be very
   large; hence, implementers SHOULD support HTTP PATCH <eref target="https://datatracker.ietf.org/doc/html/rfc5789">RFC5789</eref> to
   enable partial resource modifications.  Service provider support for
   HTTP PATCH may be discovered by querying the service provider
   configuration (see Section 4).</t>

<section anchor="replacing-with-put" title="Replacing with PUT">

<t>HTTP PUT is used to replace a resource's attributes.  For example,
   clients that have previously retrieved the entire resource in advance
   and revised it MAY replace the resource using an HTTP PUT.  Because
   SCIM resource identifiers are assigned by the service provider, HTTP
   PUT MUST NOT be used to create new resources.</t>

<t>As the operation's intent is to replace all attributes, SCIM clients
   MAY send all attributes, regardless of each attribute's mutability.
   The server will apply attribute-by-attribute replacements according
   to the following attribute mutability rules:</t>

<t><list style="hanging">
  <t hangText="readWrite, writeOnly">
  Any values provided SHALL replace the existing attribute values.

      <figure><artwork><![CDATA[
Attributes whose mutability is "readWrite" that are omitted from
the request body MAY be assumed to be not asserted by the client.
The service provider MAY assume that any existing values are to be
cleared, or the service provider MAY assign a default value to the
final resource representation.  Service providers MAY take into
account whether or not a client has access to, or understands, all
of the resource's attributes when deciding whether non-asserted
attributes SHALL be removed or defaulted.  Clients that want to
override a server's defaults MAY specify "null" for a
single-valued attribute, or an empty array "[]" for a multi-valued
attribute, to clear all values.
]]></artwork></figure>
  </t>
  <t hangText="immutable">
  If one or more values are already set for the attribute, the input value(s) MUST match, or HTTP status code 400 SHOULD bereturned with a "scimType" error code of "mutability".  If the service provider has no existing values, the new value(s) SHALL be applied.</t>
  <t hangText="readOnly">
  Any values provided SHALL be ignored.

If an attribute is "required", clients MUST specify the attribute in
 the PUT request.
Unless otherwise specified, a successful PUT operation returns a 200
 OK response code and the entire resource within the response body,
 enabling the client to correlate the client's and the service
 provider's views of the updated resource.  For example:</t>
</list></t>

<figure><artwork><![CDATA[
   PUT /Users/2819c223-7f76-453a-919d-413861904646
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
     "id":"2819c223-7f76-453a-919d-413861904646",
     "userName":"bjensen",
     "externalId":"bjensen",
     "name":{
       "formatted":"Ms. Barbara J Jensen III",
       "familyName":"Jensen",
       "givenName":"Barbara",
       "middleName":"Jane"
     },
     "roles":[],
     "emails":[
       {
           "value":"bjensen@example.com"
       },
       {
           "value":"babs@jensen.org"
       }
     ]
   }

]]></artwork></figure>

<figure><artwork><![CDATA[
   The service responds with the entire updated User:

HTTP/1.1 200 OK
Content-Type: application/scim+json
ETag: W/"b431af54f0671a2"
Location:
  "https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646"

{
  "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
  "id":"2819c223-7f76-453a-919d-413861904646",
  "userName":"bjensen",
  "externalId":"bjensen",
  "name":{
    "formatted":"Ms. Barbara J Jensen III",
    "familyName":"Jensen",
    "givenName":"Barbara",
    "middleName":"Jane"
  },
  "emails":[
    {
        "value":"bjensen@example.com"
    },
    {
        "value":"babs@jensen.org"
    }
  ],
  "meta": {
    "resourceType":"User",
    "created":"2011-08-08T04:56:22Z",
    "lastModified":"2011-08-08T08:00:12Z",
    "location":
"https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646",
    "version":"W\/\"b431af54f0671a2\""
  }
}

]]></artwork></figure>

</section>
<section anchor="modifying-with-patch" title="Modifying with PATCH">

<t>HTTP PATCH is an OPTIONAL server function that enables clients to
   update one or more attributes of a SCIM resource using a sequence of
   operations to "add", "remove", or "replace" values.  Clients may
   discover service provider support for PATCH by querying the service
   provider configuration (see Section 4).</t>

<t>The general form of the SCIM PATCH request is based on JSON Patch
   <eref target="https://datatracker.ietf.org/doc/html/rfc6902">RFC6902</eref>.  One difference between SCIM PATCH and JSON Patch is that
   SCIM servers do not support array indexing and do not support
   <eref target="https://datatracker.ietf.org/doc/html/rfc6902">RFC6902</eref> operation types relating to array element manipulation,
   such as "move".</t>

<t>The body of each request MUST contain the "schemas" attribute with
   the URI value of "urn:ietf:params:scim:api:messages:2.0:PatchOp".</t>

<t>The body of an HTTP PATCH request MUST contain the attribute
   "Operations", whose value is an array of one or more PATCH
   operations.  Each PATCH operation object MUST have exactly one "op"
   member, whose value indicates the operation to perform and MAY be one
   of "add", "remove", or "replace".  The semantics of each operation
   are defined in the following subsections.</t>

<t>The following is an example representation of a PATCH request showing
   the basic JSON structure (non-normative):</t>

<figure><artwork><![CDATA[
   { "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations":[
       {
        "op":"add",
        "path":"members",
        "value":[
         {
           "display": "Babs Jensen",
           "$ref":
   "https://example.com/v2/Users/2819c223...413861904646",
           "value": "2819c223-7f76-453a-919d-413861904646"
         }
        ]
       },
       ... + additional operations if needed ...
     ]
   }

            Figure 6: Example JSON Body for SCIM PATCH Request
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<t>The "path" attribute value is a String containing an attribute path
   describing the target of the operation.  The "path" attribute is
   OPTIONAL for "add" and "replace" and is REQUIRED for "remove"
   operations.  See relevant operation sections below for details.</t>

<t>The "path" attribute is described by the following ABNF syntax rule:</t>

<figure><artwork><![CDATA[
               PATH = attrPath / valuePath [subAttr]

                  Figure 7: SCIM PATCH PATH Rule
]]></artwork></figure>

<t>The ABNF rules "attrPath", "valuePath", and "subAttr" are defined in
   Section 3.4.2.2.  The "valuePath" rule allows specific values of a
   complex multi-valued attribute to be selected.</t>

<t>Valid examples of "path" are as follows:</t>

<figure><artwork><![CDATA[
   "path":"members"

   "path":"name.familyName"

   "path":"addresses[type eq \"work\"\]"

   "path":"members[value eq
          \"2819c223-7f76-453a-919d-413861904646\"]"

   "path":"members[value eq
          \"2819c223-7f76-453a-919d-413861904646\"].displayName"

                   Figure 8: Example Path Values
]]></artwork></figure>

<t>Each operation against an attribute MUST be compatible with the
   attribute's mutability and schema as defined in Sections 2.2 and 2.3
   of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.  For example, a client MUST NOT modify an attribute
   that has mutability "readOnly" or "immutable".  However, a client MAY
   "add" a value to an "immutable" attribute if the attribute had no
   previous value.  An operation that is not compatible with an
   attribute's mutability or schema SHALL return the appropriate HTTP
   response status code and a JSON detail error response as defined in
   Section 3.12.</t>

<t>The attribute notation rules described in Section 3.10 apply for
   describing attribute paths.  For all operations, the value of the
   "schemas" attribute on the SCIM service provider's representation of
   the resource SHALL be assumed by default.  If one of the PATCH
   operations modifies the "schemas" attribute, subsequent operations
   SHALL assume the modified state of the "schemas" attribute.  Clients
   MAY implicitly modify the "schemas" attribute by adding (or
   replacing) an attribute with its fully qualified name, including
   schema URN.  For example, adding the attribute "urn:ietf:params:scim:
   schemas:extension:enterprise:2.0:User:employeeNumber" automatically
   adds the value
   "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User" to the
   resource's "schemas" attribute.</t>

<t>Each PATCH operation represents a single action to be applied to the
   same SCIM resource specified by the request URI.  Operations are
   applied sequentially in the order they appear in the array.  Each
   operation in the sequence is applied to the target resource; the
   resulting resource becomes the target of the next operation.
   Evaluation continues until all operations are successfully applied or
   until an error condition is encountered.</t>

<t>For multi-valued attributes, a PATCH operation that sets a value's
   "primary" sub-attribute to "true" SHALL cause the server to
   automatically set "primary" to "false" for any other values in the
   array.</t>

<t>A PATCH request, regardless of the number of operations, SHALL be
   treated as atomic.  If a single operation encounters an error
   condition, the original SCIM resource MUST be restored, and a failure
   status SHALL be returned.</t>

<t>If a request fails, the server SHALL return an HTTP response status
   code and a JSON detail error response as defined in Section 3.12.</t>

<t>On successful completion, the server either MUST return a 200 OK
   response code and the entire resource within the response body,
   subject to the "attributes" query parameter (see Section 3.9), or MAY
   return HTTP status code 204 (No Content) and the appropriate response
   headers for a successful PATCH request.  The server MUST return a 200
   OK if the "attributes" parameter is specified in the request.</t>

<t><vspace blankLines='999' /></t>

<section anchor="add-operation" title="Add Operation">

<t>The "add" operation is used to add a new attribute value to an
   existing resource.</t>

<t>The operation MUST contain a "value" member whose content specifies
   the value to be added.  The value MAY be a quoted value, or it may be
   a JSON object containing the sub-attributes of the complex attribute
   specified in the operation's "path".</t>

<t>The result of the add operation depends upon what the target location
   indicated by "path" references:</t>

<t>o  If omitted, the target location is assumed to be the resource
      itself.  The "value" parameter contains a set of attributes to be
      added to the resource.</t>

<t>o  If the target location does not exist, the attribute and value are
      added.</t>

<t>o  If the target location specifies a complex attribute, a set of
      sub-attributes SHALL be specified in the "value" parameter.</t>

<t>o  If the target location specifies a multi-valued attribute, a new
      value is added to the attribute.</t>

<t>o  If the target location specifies a single-valued attribute, the
      existing value is replaced.</t>

<t>o  If the target location specifies an attribute that does not exist
      (has no value), the attribute is added with the new value.</t>

<t>o  If the target location exists, the value is replaced.</t>

<t>o  If the target location already contains the value specified, no
      changes SHOULD be made to the resource, and a success response
      SHOULD be returned.  Unless other operations change the resource,
      this operation SHALL NOT change the modify timestamp of the
      resource.</t>

<t>The following example shows how to add a member to a group.  Some
   text was removed for readability (indicated by "â€¦"):</t>

<figure><artwork><![CDATA[
   PATCH /Groups/acbf3ae7-8463-...-9b4da3f908ce
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   { "schemas":
      ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations":[
       {
        "op":"add",
        "path":"members",
        "value":[
         {
           "display": "Babs Jensen",
           "$ref":
   "https://example.com/v2/Users/2819c223...413861904646",
           "value": "2819c223-7f76-453a-919d-413861904646"
         }
        ]
       }
     ]
   }
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<t>If the user was already a member of this group, no changes should be
   made to the resource, and a success response should be returned.
   The server responds with either the entire updated Group or no
   response body:</t>

<figure><artwork><![CDATA[
   HTTP/1.1 204 No Content
   Authorization: Bearer h480djs93hd8
   ETag: W/"b431af54f0671a2"
   Location:
   "https://example.com/Groups/acbf3ae7-8463-...-9b4da3f908ce"

]]></artwork></figure>
<t>The following example shows how to add one or more attributes to a
   User resource without using a "path" attribute.</t>

<figure><artwork><![CDATA[
   PATCH /Users/2819c223-7f76-453a-919d-413861904646
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations":[{
       "op":"add",
       "value":{
         "emails":[
           {
             "value":"babs@jensen.org",
             "type":"home"
           }
         ],
         "nickname":"Babs"
     }]
   }

]]></artwork></figure>
<t>In the above example, an additional value is added to the
   multi-valued attribute "emails".  The second attribute, "nickname",
   is added to the User resource.  If the resource already had an
   existing "nickname", the value is replaced per the processing rules
   above for single-valued attributes.</t>

</section>
<section anchor="remove-operation" title="Remove Operation">

<t>The "remove" operation removes the value at the target location
   specified by the required attribute "path".  The operation performs
   the following functions, depending on the target location specified
   by "path":</t>

<t>o  If "path" is unspecified, the operation fails with HTTP status
      code 400 and a "scimType" error code of "noTarget".</t>

<t>o  If the target location is a single-value attribute, the attribute
      and its associated value is removed, and the attribute SHALL be
      considered unassigned.</t>

<t>o  If the target location is a multi-valued attribute and no filter
      is specified, the attribute and all values are removed, and the
      attribute SHALL be considered unassigned.</t>

<t>o  If the target location is a multi-valued attribute and a complex
      filter is specified comparing a "value", the values matched by the
      filter are removed.  If no other values remain after removal of
      the selected values, the multi-valued attribute SHALL be
      considered unassigned.</t>

<t>o  If the target location is a complex multi-valued attribute and a
      complex filter is specified based on the attribute's
      sub-attributes, the matching records are removed.  Sub-attributes
      whose values have been removed SHALL be considered unassigned.  If
      the complex multi-valued attribute has no remaining records, the
      attribute SHALL be considered unassigned.</t>

<t>If an attribute is removed or becomes unassigned and is defined as a
   required attribute or a read-only attribute, the server SHALL return
   an HTTP response status code and a JSON detail error response as
   defined in Section 3.12, with a "scimType" error code of
   "mutability".</t>

<t>The following example shows how to remove a member from a group.  As
   with the previous example, the "display" sub-attribute is optional.
   If the user was not a member of this group, no changes should be made
   to the resource, and a success response should be returned.</t>

<t>Note that server responses have been omitted for the rest of the
   PATCH examples.</t>

<t>Remove a single member from a group.  Some text was removed for
   readability (indicated by "â€¦"):</t>

<figure><artwork><![CDATA[
   PATCH /Groups/acbf3ae7-8463-...-9b4da3f908ce
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
      ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations":[{
       "op":"remove",
       "path":"members[value eq \"2819c223-7f76-...413861904646\"]"
     }]
   }
]]></artwork></figure>

<figure><artwork><![CDATA[
   Remove all members of a group:

   PATCH /Groups/acbf3ae7-8463-...-9b4da3f908ce
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   { "schemas":
      ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations":[{
       "op":"remove","path":"members"
     }]
   }

]]></artwork></figure>
<figure><artwork><![CDATA[
   Removal of a value from a complex multi-valued attribute (request
   headers removed for brevity):

   {
     "schemas":
      ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [{
     "op":"remove",
     "path":"emails[type eq \"work\" and value ew \"example.com\"]"
     }]
   }

]]></artwork></figure>
<figure><artwork><![CDATA[
   Example request to remove and add a member.  Some text was removed
   for readability (indicated by "..."):

   PATCH /Groups/acbf3ae7-8463-...-9b4da3f908ce
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   { "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [
       {
         "op":"remove",
         "path":
           "members[value eq\"2819c223...919d-413861904646\"]"
       },
       {
         "op":"add",
         "path":"members",
         "value": [
           {
             "display": "James Smith",
             "$ref":
   "https://example.com/v2/Users/08e1d05d...473d93df9210",
             "value": "08e1d05d...473d93df9210"
           }
         ]
       }
     ]
   }
]]></artwork></figure>

<t><vspace blankLines='999' /></t>
<figure><artwork><![CDATA[
   The following example shows how to replace all of the members of a
   group with a different members list.  Some text was removed for
   readability (indicated by "..."):


   PATCH /Groups/acbf3ae7-8463-4692-b4fd-9b4da3f908ce
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [
       {
         "op":"remove","path":"members"
       },
       {
         "op":"add",
         "path":"members",
         "value":[
         {
           "display": "Babs Jensen",
           "$ref":
   "https://example.com/v2/Users/2819c223...413861904646",
           "value": "2819c223-7f76-453a-919d-413861904646"
         },
         {
           "display": "James Smith",
           "$ref":
   "https://example.com/v2/Users/08e1d05d...473d93df9210",
           "value": "08e1d05d-121c-4561-8b96-473d93df9210"
         }]
       }
     ]
   }

]]></artwork></figure>
<t><vspace blankLines='999' /></t>

</section>
<section anchor="replace-operation" title="Replace Operation">

<t>The "replace" operation replaces the value at the target location
   specified by the "path".  The operation performs the following
   functions, depending on the target location specified by "path":</t>

<t>o  If the "path" parameter is omitted, the target is assumed to be
      the resource itself.  In this case, the "value" attribute SHALL
      contain a list of one or more attributes that are to be replaced.</t>

<t>o  If the target location is a single-value attribute, the attributes
      value is replaced.</t>

<t>o  If the target location is a multi-valued attribute and no filter
      is specified, the attribute and all values are replaced.</t>

<t>o  If the target location path specifies an attribute that does not
      exist, the service provider SHALL treat the operation as an "add".</t>

<t>o  If the target location specifies a complex attribute, a set of
      sub-attributes SHALL be specified in the "value" parameter, which
      replaces any existing values or adds where an attribute did not
      previously exist.  Sub-attributes that are not specified in the
      "value" parameter are left unchanged.</t>

<t>o  If the target location is a multi-valued attribute and a value
      selection ("valuePath") filter is specified that matches one or
      more values of the multi-valued attribute, then all matching
      record values SHALL be replaced.</t>

<t>o  If the target location is a complex multi-valued attribute with a
      value selection filter ("valuePath") and a specific sub-attribute
      (e.g., "addresses[type eq "work"].streetAddress"), the matching
      sub-attribute of all matching records is replaced.</t>

<t>o  If the target location is a multi-valued attribute for which a
      value selection filter ("valuePath") has been supplied and no
      record match was made, the service provider SHALL indicate failure
      by returning HTTP status code 400 and a "scimType" error code of
      "noTarget".</t>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
   The following example shows how to replace all of the members of a
   group with a different members list in a single replace operation.
   Some text was removed for readability (indicated by "..."):

   PATCH /Groups/acbf3ae7-8463-4692-b4fd-9b4da3f908ce
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [{
       "op":"replace",
       "path":"members",
       "value":[
         {
           "display": "Babs Jensen",
           "$ref":
   "https://example.com/v2/Users/2819c223...413861904646",
           "value": "2819c223...413861904646"
         },
         {
           "display": "James Smith",
           "$ref":
   "https://example.com/v2/Users/08e1d05d...473d93df9210",
           "value": "08e1d05d...473d93df9210"
         }
       ]
     }]
   }
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
   The following example shows how to change a User's entire "work"
   address, using a "valuePath" filter.  Note that by setting "primary"
   to "true", the service provider will reset "primary" to "false" for
   any other existing values of "addresses".

   PATCH /Users/2819c223-7f76-453a-919d-413861904646
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [{
       "op":"replace",
       "path":"addresses[type eq \"work\"]",
       "value":
       {
         "type": "work",
         "streetAddress": "911 Universal City Plaza",
         "locality": "Hollywood",
         "region": "CA",
         "postalCode": "91608",
         "country": "US",
         "formatted":
   "911 Universal City Plaza\nHollywood, CA 91608 US",
         "primary": true
       }
     }]
   }
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
   The following example shows how to change a specific sub-attribute
   "streetAddress" of complex attribute "emails" selected by a
   "valuePath" filter:

   PATCH /Users/2819c223-7f76-453a-919d-413861904646
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [{
       "op":"replace",
       "path":"addresses[type eq \"work\"].streetAddress",
       "value":"1010 Broadway Ave"
     }]
   }
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
   The following example shows how to replace all values of one or more
   specific attributes of a User resource.  Note that other attributes
   are unaffected.

   PATCH /Users/2819c223-7f76-453a-919d-413861904646
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   If-Match: W/"a330bc54f0671c9"

   {
     "schemas":
       ["urn:ietf:params:scim:api:messages:2.0:PatchOp"],
     "Operations": [{
       "op":"replace",
       "value":{
         "emails":[
           {
             "value":"bjensen@example.com",
             "type":"work",
             "primary":true
           },
           {
             "value":"babs@jensen.org",
             "type":"home"
           }
         ],
         "nickname":"Babs"
     }]
   }
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

</section>
</section>
</section>
<section anchor="deleting-resources" title="Deleting Resources">

<t>Clients request resource removal via DELETE.  Service providers MAY
   choose not to permanently delete the resource but MUST return a 404
   (Not Found) error code for all operations associated with the
   previously deleted resource.  Service providers MUST omit the
   resource from future query results.  In addition, the service
   provider SHOULD NOT consider the deleted resource in conflict
   calculation.  For example, if a User resource is deleted, a CREATE
   request for a User resource with the same userName as the previously
   deleted resource SHOULD NOT fail with a 409 error due to userName
   conflict.</t>

<figure><artwork><![CDATA[
            DELETE /Users/2819c223-7f76-453a-919d-413861904646
            Host: example.com
            Authorization: Bearer h480djs93hd8
            If-Match: W/"c310cd84f0281b7"

   In response to a successful DELETE, the server SHALL return a
   successful HTTP status code 204 (No Content).  A non-normative
   example response:

                          HTTP/1.1 204 No Content

   Example: Client's attempt to retrieve the previously deleted User

              GET /Users/2819c223-7f76-453a-919d-413861904646
              Host: example.com
              Authorization: Bearer h480djs93hd8

   Server response:

   HTTP/1.1 404 Not Found

   {
     "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
     "detail":"Resource 2819c223-7f76-453a-919d-413861904646 not found",
     "status": "404"
   }
]]></artwork></figure>
<t><vspace blankLines='999' /></t>

</section>
<section anchor="bulk-operations" title="Bulk Operations">

<t>The SCIM bulk operation is an optional server feature that enables
   clients to send a potentially large collection of resource operations
   in a single request.  Support for bulk requests can be discovered by
   querying the service provider configuration (see Section 4).  The
   body of a bulk operation contains a set of HTTP resource operations
   using one of the HTTP methods supported by the API, i.e., POST, PUT,
   PATCH, or DELETE.</t>

<t>Bulk requests are identified using the following schema URI:
   "urn:ietf:params:scim:api:messages:2.0:BulkRequest".  Bulk responses
   are identified using the following URI:
   "urn:ietf:params:scim:api:messages:2.0:BulkResponse".  Bulk requests
   and bulk responses share many attributes.  Unless otherwise
   specified, each attribute below is present in both bulk requests and
   bulk responses.</t>

<t>The following singular attribute is defined, in addition to the
   common attributes defined in <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.</t>

<t><list style="hanging">
  <t hangText="failOnErrors">
  An integer specifying the number of errors that the service provider will accept before the operation is terminated and an error response is returned.  OPTIONAL in a request.  Not valid in a response.

The following complex multi-valued attribute is defined, in addition
 to the common attributes defined in <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.</t>
  <t hangText="Operations">
  Defines operations within a bulk job.  Each operation corresponds to a single HTTP request against a resource endpoint.  REQUIRED. The Operations attribute has the following sub-attributes:

      <list style="hanging">
        <t hangText="method">
        The HTTP method of the current operation.  Possible values are "POST", "PUT", "PATCH", or "DELETE".  REQUIRED.</t>
        <t hangText="bulkId">
        The transient identifier of a newly created resource, unique within a bulk request and created by the client.  The bulkId serves as a surrogate resource id enabling clients to uniquely identify newly created resources in the response and cross-reference new resources in and across operations within a bulk request. REQUIRED when "method" is "POST".</t>
        <t hangText="version">
        The current resource version.  Version MAY be used if the service provider supports entity-tags (ETags) (Section 2.3 of <eref target="https://datatracker.ietf.org/doc/html/rfc7232">RFC7232</eref>) and "method" is "PUT", "PATCH", or "DELETE".</t>
        <t hangText="path">
        The resource's relative path to the SCIM service provider's root.  If "method" is "POST", the value must specify a resource
type endpoint, e.g., /Users or /Groups, whereas all other "method" values must specify the path to a specific resource,
e.g., /Users/2819c223-7f76-453a-919d-413861904646.  REQUIRED in a request.</t>
        <t hangText="data">
        The resource data as it would appear for a single SCIM POST, PUT, or PATCH operation.  REQUIRED in a request when "method" is "POST", "PUT", or "PATCH".</t>
        <t hangText="location">
        The resource endpoint URL.  REQUIRED in a response, except in the event of a POST failure.</t>
        <t hangText="response">
        The HTTP response body for the specified request operation.  When indicating a response with an HTTP status other than a 200-series response, the response body MUST be included.  For normal completion, the server MAY elect to omit the response body.</t>
        <t hangText="status">
        The HTTP response status code for the requested operation. When indicating an error, the "response" attribute MUST contain the detail error response as per Section 3.12.</t>
      </list>
  </t>
</list></t>

<figure><artwork><![CDATA[
]]></artwork></figure>

<t>If a bulk job is processed successfully, HTTP response code 200 OK
   MUST be returned; otherwise, an appropriate HTTP error code MUST be
   returned.</t>

<t>The service provider MUST continue performing as many changes as
   possible and disregard partial failures.  The client MAY override
   this behavior by specifying a value for the "failOnErrors" attribute.
   The "failOnErrors" attribute defines the number of errors that the
   service provider should accept before failing the remaining
   operations returning the response.</t>

<t>To be able to reference a newly created resource, the bulkId
   attribute MAY be specified when creating new resources.  The "bulkId"
   is defined by the client as a surrogate identifier in a POST
   operation (see Section 3.7.2).  The service provider MUST return the
   same "bulkId" together with the newly created resource.  The "bulkId"
   can then be used by the client to map the service provider id with
   the "bulkId" of the created resource.</t>

<t>A SCIM service provider MAY elect to optimize the sequence of
   operations received (e.g., to improve processing performance).  When
   doing so, the service provider MUST ensure that the client's intent
   is preserved and the same stateful result is achieved as for</t>

<t>non-optimized processing.  For example, before a "User" can be added
   to a "Group", they must first be created.  Processing these requests
   out of order might result in a failure to add the new "User" to the
   "Group".</t>

<section anchor="circular-reference-processing" title="Circular Reference Processing">

<t>The service provider MUST try to resolve circular cross-references
   between resources in a single bulk job but MAY stop after a failed
   attempt and instead return HTTP status code 409 (Conflict).  The
   following example exhibits the potential conflict.</t>

<figure><artwork><![CDATA[
POST /v2/Bulk
Host: example.com
Accept: application/scim+json
Content-Type: application/scim+json
Authorization: Bearer h480djs93hd8
Content-Length: ...

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkRequest"],
  "Operations": [
    {
      "method": "POST",
      "path": "/Groups",
      "bulkId": "qwerty",
      "data": {
        "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
        "displayName": "Group A",
        "members": [
          {
            "type": "Group",
            "value": "bulkId:ytrewq"
          }
        ]
      }
    },
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
    {
      "method": "POST",
      "path": "/Groups",
      "bulkId": "ytrewq",
      "data": {
        "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
        "displayName": "Group B",
        "members": [
          {
            "type": "Group",
            "value": "bulkId:qwerty"
          }
        ]
      }
    }
  ]
}

]]></artwork></figure>

<figure><artwork><![CDATA[
If the service provider resolved the above circular references, the
following is returned from a subsequent GET request.

GET /v2/Groups?filter=displayName sw 'Group'
Host: example.com
Accept: application/scim+json
Authorization: Bearer h480djs93hd8

HTTP/1.1 200 OK
Content-Type: application/scim+json

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
  "totalResults": 2,
  "Resources": [
    {
      "id": "c3a26dd3-27a0-4dec-a2ac-ce211e105f97",
      "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
      "displayName": "Group A",
      "meta": {
        "resourceType": "Group",
        "created": "2011-08-01T18:29:49.793Z",
        "lastModified": "2011-08-01T18:29:51.135Z",
        "location":
"https://example.com/v2/Groups/c3a26dd3-27a0-4dec-a2ac-ce211e105f97",
        "version": "W\/\"mvwNGaxB5SDq074p\""
      },
      "members": [
        {
          "value": "6c5bb468-14b2-4183-baf2-06d523e03bd3",
          "$ref":
"https://example.com/v2/Groups/6c5bb468-14b2-4183-baf2-06d523e03bd3",
          "type": "Group"
        }
      ]
    },
    {
      "id": "6c5bb468-14b2-4183-baf2-06d523e03bd3",
      "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
      "displayName": "Group B",
      "meta": {
        "resourceType": "Group",
        "created": "2011-08-01T18:29:50.873Z",
        "lastModified": "2011-08-01T18:29:50.873Z",
        "location":
"https://example.com/v2/Groups/6c5bb468-14b2-4183-baf2-06d523e03bd3",
        "version": "W\/\"wGB85s2QJMjiNnuI\""
      },
      "members": [
        {
          "value": "c3a26dd3-27a0-4dec-a2ac-ce211e105f97",
          "$ref":
"https://example.com/v2/Groups/c3a26dd3-27a0-4dec-a2ac-ce211e105f97",
          "type": "Group"
        }
      ]
    }
  ]
}

]]></artwork></figure>

</section>
<section anchor="bulkid-temporary-identifiers" title="&quot;bulkId&quot; Temporary Identifiers">

<t>A SCIM client can, within one bulk operation, create a new "User",
   create a new "Group", and add the newly created "User" to the newly
   created "Group".  In order to add the new "User" to the "Group", the
   client must use the surrogate id attribute, "bulkId", to reference
   the User.  The "bulkId" attribute value must be prepended with the
   literal "bulkId:"; e.g., if the bulkId is 'qwerty', the value is
   "bulkId:qwerty".  The service provider MUST replace the string
   "bulkId:qwerty" with the permanent resource id once created.</t>

<t>To create multiple distinct requests, each with their own "bulkId",
   the SCIM client specifies different "bulkId" values for each separate
   request.</t>

<figure><artwork><![CDATA[
The following example creates a User with the "userName" 'Alice' and
a "Group" with "displayName", with a value of "Tour Guides" with
Alice as a member.  Notice that each operation has its own "bulkId"
value.  However, the second operation (whose "bulkId" is "ytrewq")
refers to the "bulkId" of "qwerty" in order to add Alice to the new
'Tour Guides' group.


POST /v2/Bulk
Host: example.com
Accept: application/scim+json
Content-Type: application/scim+json
Authorization: Bearer h480djs93hd8
Content-Length: ...

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkRequest"],
  "Operations": [
    {
      "method": "POST",
      "path": "/Users",
      "bulkId": "qwerty",
      "data": {
        "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
        "userName": "Alice"
      }
    },
    {
      "method": "POST",
      "path": "/Groups",
      "bulkId": "ytrewq",
      "data": {
        "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
        "displayName": "Tour Guides",
        "members": [
          {
            "type": "User",
            "value": "bulkId:qwerty"
          }
        ]
      }
    }
  ]
}
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
The service provider returns the following response:

HTTP/1.1 200 OK
Content-Type: application/scim+json

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkResponse"],
  "Operations": [
    {
      "location":
"https://example.com/v2/Users/92b725cd-9465-4e7d-8c16-01f8e146b87a",
      "method": "POST",
      "bulkId": "qwerty",
      "version": "W\/\"4weymrEsh5O6cAEK\"",
      "status": {
        "code": "201"
      }
    },
    {
      "location":
"https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a",
      "method": "POST",
      "bulkId": "ytrewq",
      "version": "W\/\"lha5bbazU3fNvfe5\"",
      "status": {
        "code": "201"
      }
    }
  ]
}

In the above example, the "Alice" User resource has an "id" of
"92b725cd-9465-4e7d-8c16-01f8e146b87a" and the 'Tour Guides' Group
has an "id" of "e9e30dba-f08f-4109-8486-d5c6a331660a".
]]></artwork></figure>

<t><vspace blankLines='999' /></t>
<figure><artwork><![CDATA[
A subsequent GET request for the 'Tour Guides' Group (with an "id" of
"e9e30dba-f08f-4109-8486-d5c6a331660a") returns the following, with
Alice's "id" as the value for the member in the Group 'Tour Guides':

HTTP/1.1 200 OK
Content-Type: application/scim+json
Location:
https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a
ETag: W/"lha5bbazU3fNvfe5"

{
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"],
  "id": "e9e30dba-f08f-4109-8486-d5c6a331660a",
  "displayName": "Tour Guides",
  "meta": {
    "resourceType": "Group",
    "created": "2011-08-01T18:29:49.793Z",
    "lastModified": "2011-08-01T20:31:02.315Z",
    "location":
"https://example.com/v2/Groups/e9e30dba-f08f-4109-8486-d5c6a331660a",
    "version": "W\/\"lha5bbazU3fNvfe5\""
  },
  "members": [
    {
      "value": "92b725cd-9465-4e7d-8c16-01f8e146b87a",
      "$ref":
"https://example.com/v2/Users/92b725cd-9465-4e7d-8c16-01f8e146b87a",
      "type": "User"
    }
  ]
}
]]></artwork></figure>

<t><vspace blankLines='999' /></t>
<figure><artwork><![CDATA[
   Extensions that include references to other resources MUST be handled
   in the same way by the service provider.  The following example uses
   the bulkId attribute within the enterprise extension managerId
   attribute.

 POST /v2/Bulk
 Host: example.com
 Accept: application/scim+json
 Content-Type: application/scim+json
 Authorization: Bearer h480djs93hd8
 Content-Length: ...

 {
   "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkRequest"],
   "Operations": [
     {
       "method": "POST",
       "path": "/Users",
       "bulkId": "qwerty",
       "data": {
         "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
         "userName": "Alice"
       }
     },
     {
       "method": "POST",
       "path": "/Users",
       "bulkId": "ytrewq",
       "data": {
         "schemas": [
           "urn:ietf:params:scim:schemas:core:2.0:User",
           "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
         ],
         "userName": "Bob",
         "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
           "employeeNumber": "11250",
           "manager": {
             "value": "bulkId:qwerty"
           }
         }
       }
     }
   ]
 }
]]></artwork></figure>

</section>
<section anchor="response-and-error-handling" title="Response and Error Handling">

<t>The service provider response MUST include the result of all
   processed operations.  A "location" attribute that includes the
   resource's endpoint MUST be returned for all operations except for
   failed POST operations (which have no location).  The status
   attribute includes information about the success or failure of one
   operation within the bulk job.  The status attribute MUST include the
   code attribute that holds the HTTP response code that would have been
   returned if a single HTTP request would have been used.  If an error
   occurred, the status MUST also include the description attribute
   containing a human-readable explanation of the error.</t>

<figure><artwork><![CDATA[
  "status": "201"

  The following is an example of a status in a failed operation.

"status": "400",
"response":{
      "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
      "scimType":"invalidSyntax"
      "detail":
"Request is unparsable, syntactically incorrect, or violates schema.",
      "status":"400"
  }
]]></artwork></figure>
<t><vspace blankLines='999' /></t>
<figure><artwork><![CDATA[
The following example shows how to add, update, and remove a user.
The "failOnErrors" attribute is set to '1', indicating that the
service provider will stop processing and return results after one
error.  The POST operation's bulkId value is set to 'qwerty',
enabling the client to match the new User with the returned
resource "id" of
"92b725cd-9465-4e7d-8c16-01f8e146b87a".


POST /v2/Bulk
Host: example.com
Accept: application/scim+json
Content-Type: application/scim+json
Authorization: Bearer h480djs93hd8
Content-Length: ...

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkRequest"],
  "failOnErrors":1,
  "Operations":[
    {
      "method":"POST",
      "path":"/Users",
      "bulkId":"qwerty",
      "data":{
        "schemas": ["urn:ietf:params:scim:api:messages:2.0:User"],
        "userName":"Alice"
      }
    },
    {
      "method":"PUT",
      "path":"/Users/b7c14771-226c-4d05-8860-134711653041",
      "version":"W\/\"3694e05e9dff591\"",
      "data":{
        "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
        "id":"b7c14771-226c-4d05-8860-134711653041",
        "userName":"Bob"
      }
    },
]]></artwork></figure>

<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
    {
      "method": "PATCH",
      "path": "/Users/5d8d29d3-342c-4b5f-8683-a3cb6763ffcc",
      "version": "W/\"edac3253e2c0ef2\"",
      "data": {[
        {
            "op": "remove",
            "path": "nickName"
        },
        {
            "op": "add",
            "path": "userName",
            "value": "Dave"
        }
      ]}
    },
    {
      "method":"DELETE",
      "path":"/Users/e9025315-6bea-44e1-899c-1e07454e468b",
      "version":"W\/\"0ee8add0a938e1a\""
    }
  ]
}
]]></artwork></figure>
<figure><artwork><![CDATA[
   The service provider returns the following response:

HTTP/1.1 200 OK
Content-Type: application/scim+json

{
    "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkResponse"],
    "Operations": [
        {
            "location":
"https://example.com/v2/Users/92b725cd-9465-4e7d-8c16-01f8e146b87a",
            "method": "POST",
            "bulkId": "qwerty",
            "version": "W\/\"oY4m4wn58tkVjJxK\"",
            "status": "201"
        },
        {
            "location":
"https://example.com/v2/Users/b7c14771-226c-4d05-8860-134711653041",
            "method": "PUT",
            "version": "W\/\"huJj29dMNgu3WXPD\"",
            "status": "200"
        },
        {
            "location":
"https://example.com/v2/Users/5d8d29d3-342c-4b5f-8683-a3cb6763ffcc",
            "method": "PATCH",
            "version": "W\/\"huJj29dMNgu3WXPD\"",
            "status": "200"
        },
        {
            "location":
"https://example.com/v2/Users/e9025315-6bea-44e1-899c-1e07454e468b",
            "method": "DELETE",
            "status": "204"
        }
    ]
}
]]></artwork></figure>

<figure><artwork><![CDATA[
The following response is returned if an error occurred when
attempting to create the User 'Alice'.  The service provider stops
processing the bulk operation and immediately returns a response to
the client.  The response contains the error and any successful
results prior to the error.

HTTP/1.1 200 OK
Content-Type: application/scim+json

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkResponse"],
  "Operations": [
    {
      "method": "POST",
      "bulkId": "qwerty",
      "status": "400",
      "response":{
          "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
          "scimType":"invalidSyntax"
          "detail":
"Request is unparsable, syntactically incorrect, or violates schema.",
          "status":"400"
      }
    }
  ]
}
]]></artwork></figure>
<t><vspace blankLines='999' /></t>

<figure><artwork><![CDATA[
If the "failOnErrors" attribute is not specified or the service
provider has not reached the error limit defined by the client, the
service provider will continue to process all operations.  The
following is an example in which all operations failed.

  HTTP/1.1 200 OK
  Content-Type: application/scim+json

{
  "schemas": ["urn:ietf:params:scim:api:messages:2.0:BulkResponse"],
  "Operations": [
    {
      "method": "POST",
      "bulkId": "qwerty",
      "status": "400",
      "response":{
          "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
          "scimType":"invalidSyntax"
          "detail":
"Request is unparsable, syntactically incorrect, or violates schema.",
          "status":"400"
      }
    },
    {
      "location":
"https://example.com/v2/Users/b7c14771-226c-4d05-8860-134711653041",
      "method": "PUT",
      "status": "412",
      "response":{
          "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
          "detail":
                "Failed to update.  Resource changed on the server.",
          "status":"412"
      }
    },
    {
      "location":
"https://example.com/v2/Users/5d8d29d3-342c-4b5f-8683-a3cb6763ffcc",
      "method": "PATCH",
      "status": "412",
      "response":{
          "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
          "detail":
                "Failed to update.  Resource changed on the server.",
          "status":"412"
      }
    },
    {
      "location":
"https://example.com/v2/Users/e9025315-6bea-44e1-899c-1e07454e468b",
      "method": "DELETE",
      "status": "404",
      "response":{
          "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
          "detail":"Resource does not exist.",
          "status":"404"
      }
    }
  ]
}
]]></artwork></figure>

</section>
<section anchor="maximum-operations" title="Maximum Operations">

<t>The service provider MUST define the maximum number of operations and
   maximum payload size a client may send in a single request.  These
   limits MAY be retrieved from the service provider configuration (see
   'bulk' in Sections 5 and 8.5 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).  If either limit is
   exceeded, the service provider MUST return HTTP response code 413
   (Payload Too Large).  The returned response MUST specify the limit
   exceeded in the body of the error response.</t>

<t>In the following example, the client sent a request exceeding the
   service provider's maximum payload size of 1 megabyte:</t>

<figure><artwork><![CDATA[
   POST /v2/Bulk
   Host: example.com
   Accept: application/scim+json
   Content-Type: application/scim+json
   Authorization: Bearer h480djs93hd8
   Content-Length: 4294967296
]]></artwork></figure>

<t>â€¦</t>

<t>The server sends the following error in response to the oversized
   request:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 413 Payload Too Large
  Content-Type: application/scim+json

  {
    "schemas":["urn:ietf:params:scim:api:messages:2.0:Error"],
    "status": "413",
    "detail":
  "The size of the bulk operation exceeds the maxPayloadSize (1048576)."
  }
]]></artwork></figure>

</section>
</section>
<section anchor="data-inputoutput-formats" title="Data Input/Output Formats">

<t>Servers MUST accept requests and be able to return JSON-structured
   responses using UTF-8 encoding <eref target="https://datatracker.ietf.org/doc/html/rfc3629">RFC3629</eref>.  UTF-8 SHALL be the default
   encoding format.  Other media types MAY be supported by service
   providers but are beyond the scope of this specification.</t>

<t>Clients using other encodings MUST specify the format in which the
   data is submitted via an HTTP "Content-Type" header as specified in
   Section 3.1.1.5 of [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231 and MAY specify the desired response
   data format via an HTTP "Accept" header (Section 5.3.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc7231">RFC7231</eref>,
   e.g., "Accept: application/scim+json", or via URI suffix:</t>

<figure><artwork><![CDATA[
   GET /Users/2819c223-7f76-453a-919d-413861904646.scim
   Host: example.com
]]></artwork></figure>

<t>Service providers MUST support the "Accept" header
   "Accept: application/scim+json" and SHOULD support the header
   "Accept: application/json", both of which specify JSON documents
   conforming to <eref target="https://datatracker.ietf.org/doc/html/rfc7159">RFC7159</eref>.  The format defaults to
   "application/scim+json" if no format is specified.</t>

<t>Singular attributes are encoded as string name-value pairs in
   JSON, e.g.,</t>

<t>"attribute": "value"</t>

<t>Multi-valued attributes in JSON are encoded as arrays, e.g.,</t>

<t>"attributes": [ "value1", "value2" ]</t>

<t>Elements with nested elements are represented as objects in
   JSON, e.g.,</t>

<t>"attribute": { "subattribute1": "value1", "subattribute2": "value2" }</t>

</section>
<section anchor="additional-operation-response-parameters" title="Additional Operation Response Parameters">

<t>For any SCIM operation where a resource representation is returned
   (e.g., HTTP GET), the attributes returned are defined as the minimum
   attribute set plus default attribute set.  The minimum set is
   composed of those attributes that have their "returned"
   characteristic set to "always" (see Section 2.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>).  The
   default attribute set is composed of those attributes that have the
   "returned" characteristic set to "default".</t>

<t>Clients MAY request a partial resource representation on any
   operation that returns a resource within the response by specifying
   either of the mutually exclusive URL query parameters "attributes" or
   "excludedAttributes", as follows:</t>

<t><list style="hanging">
  <t hangText="attributes">
  When specified, the default list of attributes SHALL be overridden, and each resource returned MUST contain the minimum set of resource attributes and any attributes or sub-attributes explicitly requested by the "attributes"
parameter.  The query parameter attributes value is a comma-separated list of resource attribute names in standard attribute notation (Section 3.10) form (e.g., userName, name, emails).</t>
  <t hangText="excludedAttributes">
  When specified, each resource returned MUST contain the minimum set of resource attributes. Additionally, the default set of attributes minus those
attributes listed in "excludedAttributes" is returned.  The query parameter attributes value is a comma-separated list of resource attribute names in standard attribute notation (Section 3.10) form (e.g., userName, name, emails).</t>
</list></t>

<figure><artwork><![CDATA[
GET /Users/2819c223-7f76-453a-919d-413861904646?attributes=userName
Host: example.com
Accept: application/scim+json
Authorization: Bearer h480djs93hd8

The following response is returned:

HTTP/1.1 200 OK
Content-Type: application/scim+json
Location:
https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
ETag: W/"a330bc54f0671c9"

{
  "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
  "id":"2819c223-7f76-453a-919d-413861904646",
  "userName":"bjensen"
}
]]></artwork></figure>

</section>
<section anchor="attribute-notation" title="Attribute Notation">

<t>All operations share a common scheme for referencing simple and
complex attributes.  In general, attributes are uniquely identified
by prefixing the attribute name with its schema URN separated by a
colon (":") character; e.g., the core User resource attribute
'userName' is identified as "urn:ietf:params:scim:schemas:core:2.0:User:userName".  Clients MAY omit core schema attribute URN prefixes but SHOULD fully qualify extended attributes with the associated schema extension URN to avoid naming conflicts.  For example, the attribute 'age' defined in
"urn:ietf:params:scim:schemas:exampleCo:2.0:hr" is uniquely identified as "urn:ietf:params:scim:schemas:exampleCo:2.0:hr:age". Complex attributes' sub-attributes are referenced via nested dot ('.') notation, i.e., {urn}:{Attribute name}.{Sub-Attribute name}. For example, the fully qualified path for a User's givenName is "urn:ietf:params:scim:schemas:core:2.0:User:name.givenName".  All facets (URN, attribute, and sub-attribute name) of the fully encoded attribute name are case insensitive.</t>

</section>
<section anchor="me-authenticated-subject-alias" title="&quot;/Me&quot; Authenticated Subject Alias">

<t>A client MAY use a URL of the form "&lt;base-URI&gt;/Me" as a URI alias for
   the User or other resource associated with the currently
   authenticated subject for any SCIM operation.  A service provider MAY
   respond in one of three ways:</t>

<t>o  A service provider that does NOT support this feature SHOULD
      respond with HTTP status code 501 (Not Implemented).</t>

<t>o  A service provider MAY choose to redirect the client using HTTP
      status code 308 (Permanent Redirect) to the resource associated
      with the authenticated subject.  The client MAY then repeat the
      request at the indicated location.</t>

<t>o  A service provider MAY process the SCIM request directly.  In any
      response, the HTTP "Location" header MUST be the permanent
      location of the aliased resource associated with the authenticated
      subject.</t>

<t>When using the SCIM Create Resource command (HTTP POST) with the
   "/Me" alias, the desired resourceType being created is at the
   discretion of the service provider, based on the authenticated
   subject (if not anonymous) making the request and any request body
   attributes (e.g., "schemas").  See Section 7.6 for information on
   security considerations related to this operation.</t>

</section>
<section anchor="http-status-and-error-response-handling" title="HTTP Status and Error Response Handling">

<t>The SCIM protocol uses the HTTP response status codes defined in
   Section 6 of [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231 to indicate operation success or failure.  In
   addition to returning an HTTP response code, implementers MUST return
   the errors in the body of the response in a JSON format, using the
   attributes described below.  Error responses are identified using the
   following "schema" URI:
   "urn:ietf:params:scim:api:messages:2.0:Error".  The following
   attributes are defined for a SCIM error response using a JSON body:</t>

<t><list style="hanging">
  <t hangText="status">
  The HTTP status code (see Section 6 of <eref target="https://datatracker.ietf.org/doc/html/rfc7231">RFC7231</eref> expressed as a JSON string.  REQUIRED.</t>
  <t hangText="scimType">
  A SCIM detail error keyword.  See Table 9.  OPTIONAL.</t>
  <t hangText="detail">
  A detailed human-readable message.  OPTIONAL.

Implementers SHOULD handle the identified HTTP status codes as
 described below.</t>
</list></t>

<texttable title="SCIM HTTP Status Code Usage">
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Applicability</ttcol>
      <ttcol align='left'>Suggested Explanation</ttcol>
      <c>307 (Temporary Redirect)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>The client is directed to repeat the same HTTP request at the location identified.  The client SHOULD NOT use the location provided in the response as a permanent reference to the resource and SHOULD continue to use the original request URI [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231.</c>
      <c>308 (Permanent Redirect)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>The client is directed to repeat the same HTTP request at the location identified.  The client SHOULD use the location provided in the response as the permanent reference to the resource <eref target="https://datatracker.ietf.org/doc/html/rfc7538">RFC7538</eref>.</c>
      <c>400 (Bad Request)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>Request is unparsable, syntactically incorrect, or violates schema.</c>
      <c>401 (Unauthorized)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>Authorization failure.  The authorization header is invalid or missing.</c>
      <c>403 (Forbidden)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>Operation is not permitted based on the supplied authorization.</c>
      <c>404 (Not Found)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>Specified resource (e.g., User) or endpoint does not exist.</c>
      <c>409 (Conflict)</c>
      <c>POST, PUT, PATCH, DELETE</c>
      <c>The specified version number does not match the resource's latest version number, or a service provider refused to create a new, duplicate resource.</c>
      <c>412 (Precondition Failed)</c>
      <c>PUT, PATCH, DELETE</c>
      <c>Failed to update. Resource has changed on the server.</c>
      <c>413 (Payload Too Large)</c>
      <c>POST</c>
      <c>{"maxOperations": 1000,"maxPayloadSize":1048576}</c>
      <c>500 (Internal Server Error)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>An internal error.  Implementers SHOULD provide descriptive debugging advice.</c>
      <c>501 (Not Implemented)</c>
      <c>GET, POST, PUT, PATCH, DELETE</c>
      <c>Service provider does not support the request operation, e.g., PATCH.</c>
</texttable>

<t>For HTTP status code 400 (Bad Request) responses, the following
   detail error types are defined:</t>

<texttable title="SCIM Detail Error Keyword Values">
      <ttcol align='left'>scimType</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Applicability</ttcol>
      <c>invalidFilter</c>
      <c>The specified filter syntax was invalid (does not comply with Figure 1), or the specified attribute and filter comparison combination is not supported.</c>
      <c>GET (Section 3.4.2), POST(Search - Section 3.4.3), PATCH(Path Filter - Section 3.5.2)</c>
      <c>tooMany</c>
      <c>The specified filter yields many more results than the server is willing to calculate or process.  For example, a filter such as "(userName pr)" by itself would return all entries with a "userName" and MAY not be acceptable to the service provider.</c>
      <c>GET (Section 3.4.2), POST(Search - Section 3.4.3)</c>
      <c>uniqueness</c>
      <c>One or more of the attribute values are already in use or are reserved.</c>
      <c>POST (Create - Section 3.3), PUT (Section 3.5.1), PATCH (Section 3.5.2)</c>
      <c>mutability</c>
      <c>The attempted modification is not compatible with the target attribute's mutability or current state (e.g., modification of an "immutable" attribute with an existing value).</c>
      <c>PUT (Section 3.5.1), PATCH(Section 3.5.2)</c>
      <c>invalidSyntax</c>
      <c>The request body message structure was invalid or did not conform to the request schema.</c>
      <c>POST (Search - Section 3.4.3, Create - Section 3.3, Bulk - Section 3.7), PUT (Section 3.5.1)</c>
      <c>invalidPath</c>
      <c>The "path" attribute was invalid or malformed (see Figure 7).</c>
      <c>PATCH (Section 3.5.2)</c>
      <c>noTarget</c>
      <c>The specified "path" did not yield an attribute or attribute value that could be operated on. This occurs when the specified "path" value contains a filter that yields no match.</c>
      <c>PATCH (Section 3.5.2)</c>
      <c>invalidValue</c>
      <c>A requested value was missing, or the value specified was not compatible with the operation or attribute type (see Section 2.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>, or resource schema (see Section 4 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>))</c>
      <c>GET (Section 3.4.2), POST(Create - Section 3.3, Query - Section 3.4.3), PUT(Section 3.5.1), PATCH (Section 3.5.2)</c>
      <c>invalidVers</c>
      <c>The specified SCIM protocol version is not supported (see Section 3.13).</c>
      <c>GET (Section 3.4.2), POST(ALL), PUT(Section 3.5.1), PATCH(Section 3.5.2), DELETE (Section 3.6)</c>
      <c>sensitive</c>
      <c>The specified request cannot be completed, due to the passing of sensitive (e.g., personal) information in a request URI.  For example, personal information SHALL NOT be transmitted over request URIs.  See Section 7.5.2.</c>
      <c>GET (Section 3.4.2)</c>
</texttable>

<t>Note that in Table 9 above, the information in the Applicability
   column applies to the normal HTTP method but MAY apply within a SCIM
   bulk operation (via HTTP POST).</t>

<figure><artwork><![CDATA[
   Example of an error in response to a non-existent GET request:

   HTTP/1.1 404 Not Found

   {
     "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
     "detail":"Resource 2819c223-7f76-453a-919d-413861904646 not found",
     "status": "404"
   }

   Example of an error in response to a PUT request:

   HTTP/1.1 400 Bad Request

   {
     "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
     "scimType":"mutability"
     "detail":"Attribute 'id' is readOnly",
     "status": "400"
   }

]]></artwork></figure>

</section>
<section anchor="scim-protocol-versioning" title="SCIM Protocol Versioning">

<t>The Base URL MAY be appended with a version identifier as a separate
   segment in the URL path.  At the time of this writing, the identifier
   is 'v2'.  If specified, the version identifier MUST appear in the URL
   path immediately preceding the resource endpoint and conform to the
   following scheme: the character 'v' followed by the desired SCIM
   version number, e.g., a version 'v2' User request is specified as
   /v2/Users.  When specified, service providers MUST perform the
   operation using the desired version or reject the request.  When
   omitted, service providers SHOULD perform the operation using the
   most recent SCIM protocol version supported by the service provider.</t>

</section>
<section anchor="versioning-resources" title="Versioning Resources">

<t>The SCIM protocol supports resource versioning via standard HTTP
   ETags (Section 2.3 of <eref target="https://datatracker.ietf.org/doc/html/rfc7232">RFC7232</eref>).  Service providers MAY support weak
   ETags as the preferred mechanism for performing conditional
   retrievals and ensuring that clients do not inadvertently overwrite
   each other's changes, respectively.  When supported, SCIM ETags MUST
   be specified as an HTTP header and SHOULD be specified within the
   'version' attribute contained in the resource's 'meta' attribute.</t>

<figure><artwork><![CDATA[
   Example create request:

   POST /Users  HTTP/1.1
   Host: example.com
   Content-Type:  application/scim+json
   Authorization: Bearer h480djs93hd8
   Content-Length: ...

   {
     "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
     "userName":"bjensen",
     "externalId":"bjensen",
     "name":{
       "formatted":"Ms. Barbara J Jensen III",
       "familyName":"Jensen",
       "givenName":"Barbara"
     }
   }

]]></artwork></figure>

<figure><artwork><![CDATA[
   The server responds with an ETag in the response header and meta
   structure:

   HTTP/1.1 201 Created
   Content-Type: application/scim+json
   Location:
    https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646
   ETag: W/"e180ee84f0671b1"

   {
     "schemas":["urn:ietf:params:scim:schemas:core:2.0:User"],
     "id":"2819c223-7f76-453a-919d-413861904646",
     "meta":{
       "resourceType":"User",
       "created":"2011-08-01T21:32:44.882Z",
       "lastModified":"2011-08-01T21:32:44.882Z",
       "location":
   "https://example.com/v2/Users/2819c223-7f76-453a-919d-413861904646",
       "version":"W\/\"e180ee84f0671b1\""
     },
     "name":{
       "formatted":"Ms. Barbara J Jensen III",
       "familyName":"Jensen",
       "givenName":"Barbara"
     },
     "userName":"bjensen"
   }

]]></artwork></figure>
<t>With the returned ETag, clients MAY choose to retrieve the resource
   only if the resource has been modified.</t>

<t>An example of conditional retrieval, using the If-None-Match header
   (Section 3.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc7232">RFC7232</eref>):</t>

<figure><artwork><![CDATA[
  GET /Users/2819c223-7f76-453a-919d-413861904646?attributes=displayName
  Host: example.com
  Accept: application/scim+json
  Authorization: Bearer h480djs93hd8
  If-None-Match: W/"e180ee84f0671b1"

]]></artwork></figure>

<t>If the resource has not changed, the service provider simply returns
   an empty body with a 304 (Not Modified) response code.</t>

<t>If the service provider supports versioning of resources, the client
   MAY supply an If-Match header (Section 3.1 of <eref target="https://datatracker.ietf.org/doc/html/rfc7232">RFC7232</eref>) for PUT and
   PATCH operations to ensure that the requested operation succeeds only
   if the supplied ETag matches the latest service provider resource,
   e.g., If-Match: W/"e180ee84f0671b1".</t>

</section>
</section>
<section anchor="service-provider-configuration-endpoints" title="Service Provider Configuration Endpoints">

<t>SCIM defines three endpoints to facilitate discovery of SCIM service
   provider features and schema that MAY be retrieved using HTTP GET:</t>

<t><list style="hanging">
  <t hangText="/ServiceProviderConfig">
  An HTTP GET to this endpoint will return a JSON structure that describes the SCIM specification features available on a service provider.  This endpoint SHALL return responses with a JSON object using a "schemas" attribute of "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig". The attributes returned in the JSON object are defined in Section 5 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.  An example representation of SCIM service provider configuration may be found in Section 8.5 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.</t>
  <t hangText="/Schemas">
  An HTTP GET to this endpoint is used to retrieve information about resource schemas supported by a SCIM service provider.  An HTTP GET to the endpoint "/Schemas" SHALL return all supported schemas in ListResponse format (see Figure 3).  Individual schema definitions can be returned by appending the schema URI to the /Schemas endpoint.  For example:

      <figure><artwork><![CDATA[
      /Schemas/urn:ietf:params:scim:schemas:core:2.0:User
]]></artwork></figure>

The contents of each schema returned are described in Section 7 of
<eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.  An example representation of SCIM schemas may be found in Section 8.7 of 
<eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.</t>
  <t hangText="/ResourceTypes">
  An HTTP GET to this endpoint is used to discover the types of resources available on a SCIM service provider (e.g., Users and Groups).  Each resource type defines the endpoints, the core schema URI that defines the resource, and any supported schema extensions.  The attributes defining a resource type can be found in Section 6 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>, and an example representation can be found in Section 8.6 of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>.

In cases where a request is for a specific "ResourceType" or
 "Schema", the single JSON object is returned in the same way that a
 single User or Group is retrieved, as per Section 3.4.1.  When
 returning multiple ResourceTypes or Schemas, the message form
 described by the "urn:ietf:params:scim:api:messages:2.0:ListResponse"
 (ListResponse) form SHALL be used as shown in Figure 3 and in
 Figure 9 below.  Query parameters described in Section 3.4.2, such as
 filtering, sorting, and pagination, SHALL be ignored.  If a "filter"
 is provided, the service provider SHOULD respond with HTTP status
 code 403 (Forbidden) to ensure that clients cannot incorrectly assume
 that any matching conditions specified in a filter are true.</t>
</list></t>

<figure><artwork><![CDATA[
   The following is a non-normative example of an HTTP GET to the
   /ResourceTypes endpoint:

  {
    "totalResults":2,
    "itemsPerPage":10,
    "startIndex":1,
    "schemas":["urn:ietf:params:scim:api:messages:2.0:ListResponse"],
    "Resources":[{
      "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
      "id":"User",
      "name":"User",
      "endpoint": "/Users",
      "description": "User Account",
      "schema": "urn:ietf:params:scim:schemas:core:2.0:User",
      "schemaExtensions": [{
        "schema":
          "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
        "required": true
      }],
      "meta": {
        "location":"https://example.com/v2/ResourceTypes/User",
        "resourceType": "ResourceType"
      }
    },
   {
     "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
     "id":"Group",
     "name":"Group",
     "endpoint": "/Groups",
     "description": "Group",
     "schema": "urn:ietf:params:scim:schemas:core:2.0:Group",
     "meta": {
       "location":"https://example.com/v2/ResourceTypes/Group",
       "resourceType": "ResourceType"
     }
   }]
  }
]]></artwork></figure>

<figure><artwork><![CDATA[
        Figure 9: Example Resource Type JSON Representation
]]></artwork></figure>

</section>
<section anchor="preparation-and-comparison-of-internationalized-strings" title="Preparation and Comparison of Internationalized Strings">

<t>To increase the likelihood that the input and comparison of usernames
   and passwords will work in ways that make sense for typical users
   throughout the world, there are rules for preparing, enforcing, and
   comparing internationalized strings that represent usernames and
   passwords.  Before comparing or evaluating the uniqueness of a
   "userName" or "password" attribute, service providers MUST use the
   preparation, enforcement, and comparison of internationalized strings
   (PRECIS) preparation and comparison rules described in Sections 3 and
   4, respectively, of <eref target="https://datatracker.ietf.org/doc/html/rfc7613">RFC7613</eref>, which is based on the PRECIS framework
   specification <eref target="https://datatracker.ietf.org/doc/html/rfc7564">RFC7564</eref>.  See Section 3.4 of <eref target="https://datatracker.ietf.org/doc/html/rfc7613">RFC7613</eref> for discussion
   on "Case Mapping vs. Case Preparation" regarding "userName"
   attributes.</t>

</section>
<section anchor="multi-tenancy" title="Multi-Tenancy">

<t>A single service provider may expose the SCIM protocol to multiple
   clients.  Depending on the nature of the service, the clients may
   have authority to access and alter resources initially created by
   other clients.  Alternatively, clients may expect to access disjoint
   sets of resources and may expect that their resources are
   inaccessible to other clients.  These scenarios are called
   "multi-tenancy", where each client is understood to be or represent
   a "tenant" of the service provider.  Clients may also be
   multi-tenanted.</t>

<t>The following common cases may occur:</t>

<t><list style="numbers">
  <t>All clients share all resources (no tenancy).</t>
  <t>Each single client creates and accesses a private subset of
resources (1 client:1 Tenant).</t>
  <t>Sets of clients share sets of resources (M clients:1 Tenant).</t>
  <t>One client can create and access several private subsets of
resources (1 client:M Tenants).</t>
</list></t>

<t>Service providers may implement any subset of the above cases.</t>

<t>Multi-tenancy is OPTIONAL.  The SCIM protocol does not define a
   scheme for multi-tenancy.</t>

<t>The SCIM protocol does not prescribe the mechanisms whereby clients
   and service providers interact for the following:</t>

<t>o  Registering or provisioning Tenants</t>

<t>o  Associating a subset of clients with a subset of the Tenants</t>

<t>o  Indicating which tenant is associated with the data in a request
      or response, or indicating which Tenant is the subject of a query</t>

<section anchor="associating-clients-to-tenants" title="Associating Clients to Tenants">

<t>The service provider MAY use one of the authentication mechanisms
   discussed in Section 2 to determine the identity of the client and
   thus infer the associated Tenant.</t>

<t>For implementations where a client is associated with more than one
   Tenant, the service provider MAY use one of the three methods below
   for explicit specification of the Tenant.</t>

<t>If any of these methods of allowing the client to explicitly specify
   the Tenant are employed, the service provider should ensure that
   access controls are in place to prevent or allow cross-tenant use
   cases.</t>

<t>The service provider should consider precedence in cases where a
   client may explicitly specify a Tenant while being implicitly
   associated with a different Tenant.</t>

<t>In all of these methods, the {tenant_id} is a unique identifier for
   the Tenant as defined by the service provider.</t>

<t>o  A URL prefix: "https://www.example.com/Tenants/{tenant_id}/v2/
      Users".</t>

<t>o  A sub-domain: "https://{tenant_id}.example.com/v2/Groups".</t>

<t>o  An HTTP header: The service provider may recognize a {tenant_id}
      provided by the client in an HTTP header as the indicator of the
      desired target Tenant.</t>

</section>
<section anchor="scim-identifiers-with-multiple-tenants" title="SCIM Identifiers with Multiple Tenants">

<t>Considerations for a multi-tenant implementation:</t>

<t>o  The service provider may choose to implement SCIM ids that are
      unique across all resources for all Tenants, but this is not
      required.</t>

<t>o  The externalId, defined by the client, is required to be unique
      ONLY within the resources associated with the associated Tenant.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="http-considerations" title="HTTP Considerations">

<t>The SCIM protocol layers on top of HTTP and is thus subject to the
   security considerations of HTTP (Section 9 of <eref target="https://datatracker.ietf.org/doc/html/rfc7230">RFC7230</eref>) and its
   related specifications.</t>

<t>As stated in Section 2.7.1 of <eref target="https://datatracker.ietf.org/doc/html/rfc7230">RFC7230</eref>, a SCIM client MUST NOT
   generate the "userinfo" (i.e., username and password) component
   (and its "@" delimiter) when an "http" URI reference is generated
   with a message, as userinfo and its "@" delimiter are now disallowed
   in HTTP.</t>

</section>
<section anchor="tls-support-considerations" title="TLS Support Considerations">

<t>SCIM resources (e.g., Users and Groups) contain sensitive
   information, including passwords.  Therefore, SCIM clients and
   service providers MUST require the use of a transport-layer security
   mechanism when communicating with SCIM service providers.  The SCIM
   service provider MUST support TLS 1.2 <eref target="https://datatracker.ietf.org/doc/html/rfc5246">RFC5246</eref> and MAY support
   additional transport-layer mechanisms meeting its security
   requirements.  When using TLS, the client MUST perform a TLS/SSL
   server identity check, per <eref target="https://datatracker.ietf.org/doc/html/rfc6125">RFC6125</eref>.  Implementation security
   considerations for TLS can be found in <eref target="https://datatracker.ietf.org/doc/html/rfc7525">RFC7525</eref>.</t>

</section>
<section anchor="authorization-token-considerations" title="Authorization Token Considerations">

<t>When using authorization tokens such as those issued by OAuth 2.0
   <eref target="https://datatracker.ietf.org/doc/html/rfc6749">RFC6749</eref>, implementers MUST take into account threats and
   countermeasures as documented in Section 8 of <eref target="https://datatracker.ietf.org/doc/html/rfc7521">RFC7521</eref>.</t>

</section>
<section anchor="bearer-token-and-cookie-considerations" title="Bearer Token and Cookie Considerations">

<t>Since the possession of a bearer token or cookie MAY authorize the
   holder to potentially read, modify, or delete resources, bearer
   tokens and cookies MUST contain sufficient entropy to prevent a
   random guessing attack; for example, see Section 5.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc6750">RFC6750</eref> and
   Section 5.1.4.2.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc6819">RFC6819</eref>.</t>

<t>As with all SCIM communications, bearer tokens and HTTP cookies MUST
   be exchanged using TLS.</t>

<t>Bearer tokens MUST have a limited lifetime that can be determined
   directly or indirectly (e.g., by checking with a validation service)
   by the service provider.  By expiring tokens, clients are forced to
   obtain a new token (which usually involves re-authentication) for
   continued authorized access.  For example, in OAuth 2.0, a client MAY
   use OAuth token refresh to obtain a new bearer token after
   authenticating to an authorization server.  See Section 6 of
   <eref target="https://datatracker.ietf.org/doc/html/rfc6749">RFC6749</eref>.</t>

<t>As with bearer tokens, an HTTP cookie SHOULD last no longer than the
   lifetime of a browser session.  An expiry time should be set that
   limits session cookie lifetime as per Section 5.2.1 of <eref target="https://datatracker.ietf.org/doc/html/rfc6265">RFC6265</eref>.</t>

<t>Implementations supporting OAuth bearer tokens need to factor in
   security considerations of this authorization method <eref target="https://datatracker.ietf.org/doc/html/rfc7521">RFC7521</eref>.
   Since security is only as good as the weakest link, implementers also
   need to consider authentication choices coupled with OAuth bearer
   tokens.  The security considerations of the default authentication
   method for OAuth bearer tokens, HTTP Basic, are well documented in
   <eref target="TODOADDLINK">HTTP-BASIC-AUTH</eref>; therefore, implementers are encouraged to use
   stronger authentication methods.  Designating the specific methods of
   authentication and authorization is out of scope for SCIM; however,
   this information is provided as a resource to implementers.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<section anchor="personal-information" title="Personal Information">

<t>The SCIM Core Schema specification <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref> defines attributes that
   may contain personally identifying information as well as other
   sensitive personal data.  The privacy considerations in the Security
   Considerations section of <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref> MUST be considered.</t>

</section>
<section anchor="disclosure-of-sensitive-information-in-uris" title="Disclosure of Sensitive Information in URIs">

<t>As mentioned in Section 9.4 of [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231, SCIM clients requesting
   information using query filters that use HTTP GET SHOULD give
   consideration to the information content of the filters and whether
   or not their exposure in a URI would represent a breach of security
   or confidentiality through leakage in web browsers or server logs.
   This is particularly true for information that is legally considered
   "personally identifiable information" or is otherwise restricted by
   privacy laws.  In these situations, to ensure maximum security and
   confidentiality, clients SHOULD query using HTTP POST (see
   Section 3.4.3).</t>

<t>Servers that receive HTTP GET requests using filters that contain
   sensitive or confidential personal information SHOULD respond with
   HTTP status code 403 to indicate that the operation is forbidden.  A
   "scimType" error code of "sensitive" may be returned to indicate that
   the request must be submitted using POST.  The following is a
   non-normative example:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 403 Forbidden

  {
    "schemas": ["urn:ietf:params:scim:api:messages:2.0:Error"],
    "detail":
          "Query filter involving 'name' is restricted or confidential",
    "scimType": "sensitive",
    "status": "404"
  }
]]></artwork></figure>

</section>
</section>
<section anchor="anonymous-requests-1" title="Anonymous Requests">

<t>If a SCIM service provider accepts anonymous requests such as SCIM
   resource creation requests (via HTTP POST), appropriate security
   measures should be put in place to prevent or limit exposure to
   attacks.  The following countermeasures MAY be used:</t>

<t>o  Try to authenticate web user interface components that formulate
      the SCIM creation request.  While the end-user may be anonymous,
      the web user interface component often has its own way to
      authenticate to the SCIM service provider (e.g., has an OAuth
      client credential <eref target="https://datatracker.ietf.org/doc/html/rfc6749">RFC6749</eref>), and the web user interface component
      may implement its own measures (e.g., the Completely Automated
      Public Turing test to tell Computers and Humans Apart (CAPTCHA))
      to ensure that a legitimate request is being made.</t>

<t>o  Limit the number of requests that any particular client MAY make
      in a period of time.</t>

<t>o  For User resources, default newly created resources with an
      "active" setting of "false", and use a secondary confirmation
      process (e.g., email confirmation) to ensure that the resource
      created is real.</t>

</section>
<section anchor="secure-storage-and-handling-of-sensitive-data" title="Secure Storage and Handling of Sensitive Data">

<t>An attacker may obtain valid username/password combinations from the
   SCIM service provider's underlying database by gaining access to the
   database and/or launching injection attacks.  This could lead to
   unintended disclosure of username/password combinations.  The impact
   may extend beyond the domain of the SCIM service provider if the data
   was provisioned from other domains.</t>

<t>Administrators should undertake industry best practices to protect
   the storage of credentials and, in particular, SHOULD follow
   recommendations outlined in Section 5.1.4.1 of <eref target="https://datatracker.ietf.org/doc/html/rfc6819">RFC6819</eref>.  These
   recommendations include, but are not limited to, the following:</t>

<t>o  Provide injection attack countermeasures (e.g., by validating all
      inputs and parameters);</t>

<t>o  Credentials should not be stored in cleartext form;</t>

<t>o  Store credentials using an encrypted protection mechanism (e.g.,
      hashing); and</t>

<t>o  Where possible, avoid passwords as the sole form of
      authentication, and consider using credentials that are based on
      asymmetric cryptography.</t>

<t>As outlined in Section 5.1.4.2 of <eref target="https://datatracker.ietf.org/doc/html/rfc6819">RFC6819</eref>, administrators SHOULD
   take countermeasures such as the following, to prevent online attacks
   on secrets:</t>

<t>o  Utilize a secure password policy in order to increase user
      password entropy, which will in turn hinder online attacks and
      password guessing;</t>

<t>o  Mitigate attacks on passwords by locking respective accounts that
      have a number of failed attempts;</t>

<t>o  Use "tar pit" techniques by temporarily locking a respective
      account and delaying responses for a certain duration.  The
      duration may increase with the number of failed attempts; and
   o  Use authentication systems that use CAPTCHAs and other factors for
      authenticating users, to further reduce the possibility of
      automated attacks.</t>

<t>Service providers SHOULD define an access control model that
   differentiates between individual client applications and their
   specific need to access information, and any User self-service rights
   to review and update personal profile information.  This may include
   OAuth 2.0 delegation profiles that allow client systems to act on
   behalf of users with their permission.</t>

</section>
<section anchor="case-insensitive-comparison-and-international-languages" title="Case-Insensitive Comparison and International Languages">

<t>When comparing Unicode strings such as those in query filters or
   testing for uniqueness of usernames and passwords, strings MUST be
   appropriately prepared before comparison.  See Section 5.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>To:  ietf-types@iana.org</t>

<t>Subject:  Registration of media type application/scim+json</t>

<t>Type name:  application</t>

<t>Subtype name:  scim+json</t>

<t>Required parameters:  none</t>

<t>Optional parameters:  none</t>

<t>Encoding considerations:  8bit</t>

<t>Security considerations:  See Section 7 of this document (RFC 7644)</t>

<t>Interoperability considerations:  The "application/scim+json" media
      type is intended to identify JSON structure data that conforms to
      the SCIM protocol and schema specifications.  Older versions of
      SCIM are known to informally use "application/json".</t>

<t>Published specification:  this document (RFC 7644)</t>

<t>Applications that use this media type:  It is expected that
      applications that use this type may be special-purpose
      applications intended for inter-domain provisioning.  Clients may
      also be applications (e.g., mobile applications) that need to use
      SCIM for self-registration of user accounts.  SCIM services may be
      offered by web applications that offer support for standards-based
      provisioning or may be a dedicated SCIM service provider such as a
      "cloud directory".  Content may be treated as equivalent to the
      "application/json" type for the purpose of displaying in web
      browsers.</t>

<t>Additional information:</t>

<figure><artwork><![CDATA[
     Magic number(s):

     File extension(s): .scim .scm

     Macintosh file type code(s):
]]></artwork></figure>

<t>Person &amp; email address to contact for further information:  SCIM
      mailing list "<eref target="mailto:scim@ietf.org">scim@ietf.org</eref>"</t>

<t>Intended usage:  COMMON* (see restrictions)</t>

<t>Restrictions on usage:  For most client types, it is sufficient to
      recognize the content as equivalent to "application/json".
      Applications intending to use the SCIM protocol SHOULD use the
      "application/scim+json" media type.</t>

<t>Author:  Phil Hunt</t>

<t>Change controller:  IETF</t>

</section>
<section anchor="registering-uris-for-scim-messages" title="Registering URIs for SCIM Messages">

<t>As per the "SCIM Schema URIs for Data Resources" registry established
   by <eref target="https://datatracker.ietf.org/doc/html/rfc7643">RFC7643</eref>, the following defines and registers the SCIM protocol
   request/response JSON schema URN identifier prefix of
   "urn:ietf:params:scim:api:messages:2.0", which is part of the
   URN sub-namespace for SCIM.  There is no specific associated
   resource type.</t>

<texttable title="SCIM Schema URIs for Data Resources">
      <ttcol align='left'>Schema URI</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>urn:ietf:params:scim:api: messages:2.0:ListResponse</c>
      <c>List/Query Response</c>
      <c>See Section 3.4.2</c>
      <c>urn:ietf:params:scim:api: messages:2.0:SearchRequest</c>
      <c>POST Query Request</c>
      <c>See Section 3.4.3</c>
      <c>urn:ietf:params:scim:api: messages:2.0:PatchOp</c>
      <c>PATCH Operation</c>
      <c>See Section 3.5.2</c>
      <c>urn:ietf:params:scim:api: messages:2.0:BulkRequest</c>
      <c>Bulk Operations Request</c>
      <c>See Section 3.7</c>
      <c>urn:ietf:params:scim:api: messages:2.0:BulkResponse</c>
      <c>Bulk Operations Response</c>
      <c>See Section 3.7</c>
      <c>urn:ietf:params:scim:api: messages:2.0:Error</c>
      <c>Error Response</c>
      <c>See Section 3.12</c>
</texttable>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The editor would like to acknowledge the contribution and work of the
   editors of draft versions of this document:</t>

<figure><artwork><![CDATA[
  Trey Drake, UnboundID

  Chuck Mortimore, Salesforce
]]></artwork></figure>

<t>The editor would like to thank the participants in the SCIM working
   group for their support of this specification.</t>

</section>


  </middle>

  <back>





  </back>

<!-- ##markdown-source:
H4sIALVmWGIAA+y9aXfbSJYg+t3n+D/goN55lmZIWtRmifXqdctLVjrLW9ly
1XSn8/QBSVBCJkkoCdCyquT+7XPXiBsBUCJlZ3ZWd3l6Km0CiOXGjbsv3W73
/r26qKf5IEnfXVV1Pksm5SJ5siirqjsuZ1kxT56P8zm8c5W8zObZWT6Dfw2S
N4uyLkflNL1/LxsOF/lHHODJ85fuQfLuIh8Vk2KU1UU5h9fG5WiezWCi8SKb
1N0iryfdalTMutlF0d3duX8P3szPysXVICnmk/L+vfv3iovFIKkXy6re3dk5
3tmFuRZ5NkhOXz99ff/eZbn46WxRLi8GCc58/95P+RX8Nh4k3z+f1/lintfd
pzhXh57/gCNWdTYf/0c2LeewkKu8gl9m2aL+j5+XZZ1Xg2QO814UMALsoZNU
5aJe5JMK/nY1w7/QGNmyPi8Xg/v3EgBeAn94W6ePn/I/y8VZNi/+Rvumn5Mn
5ewim1/x4xyAOuXfn+Ffcch5uZjB+x9hGNo37D/4odvtJtmwqhfZqMZ/wzCn
53mywYklWwiD7aSyp0IDFVWSzZNvT0/fdIdZlY+TCz3B+jyrk1n2U17B/8JA
xfwsKXjoAn6DiWbLaV0wFGTqapTPs0VRVkmeVUW+SOoyqZYXFwDJ5GORJVlC
R5AtxsXfYK4qX3wsRnmPhnj2KZtdTGnk0XQ5zjvJcFkncORwLHUyLWZFDZ/U
ZSfJ8XwvFkWVd+uyO5qWSzcUjQRb+AgrXeDWxjAcvK1v6fp6DMIAHrBSmAJG
yn+qaBxY/HBZTMfJ8gKe5p8u8kWRz0d5clnU5/DvoqoRKNXoHE6VJxvnF9Py
CkFedXgt02xEL8lMgAAX5wCbKsEJC9hxMcKzKifw7cd8Wl7QecFYfDyw+LMF
La+TXJ4X0zzJLi6mVzikWwCiJJ7LSN5jFBUc5GXg2gBiH7PRVTIrx/kUIYA4
8aCiOWBKWBJseJGPl7BDGDAZlZVfyKjEw/kkS10CuBkrGL1KAA3NViXDK4E/
rQy/m8FO8QMah4HVQaTLP8G8FQKeVtShRWZ6kh4Rx/mkmMPRw8j1eVEJvo2W
OHNP78esGI+nOf7rdwnc/0UJ26BDxUFff8Qx80t7eZBauSn4FiBkBYjdKR5G
672A++axDJdPG4VZ4ltylYyzOsNzRmhe5kNBR4anvbH5/GOxKOeENoCFo/ME
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
YMQDd9dCy4IWUJWKnNjTaDGuIkC+Cz7RgUz4W8XRckMuEcwq1S3YhMCwYL9l
+6Ki8/mZlXa+BJVbkoFMIpm6XPx3GuxjK4aL3NogzGSGRQ7V5YbHIe1pMaEz
52k3o69tQqdBVpjRO7dlbrHka7O31le6GW5e86ASSV7zPuGVOROKiw7whVSR
YareFpf6RysCCyK9VsWHExLXV3pI4WHe+CVKD43wqlTrUqD8VMGlcMmnpdb2
qWpr6WAxXUOLdOi3ClRxDrXDlvootVk0BDX/adW4RVH4hfQEjej1P6+IoGqE
TEV2hg++AfHn2BqgJ6eoAjxfhufQXUISldf+Wx/vr3+wzeC+6IzkeIIzInnD
98zgq3wL89taaLRs4h191nS5sj7yLwSSxMGkFdUVMFHbJg1aNH6UHEsPGfxq
RfUIjM9cpLorVancB2m3sf6uIo40zNom3/+BF+eroYkbMDCPtJPHxGuXif/T
oJaeWALkVwStyrerKgO1GZxvsjh70+4tBh1jd6YiRcm7Rkkjem9ty/POUd4f
7xyMkSM82hsf740nx7v9neaIzva86ovVZiMPLvlbu8V5A5umLXUi7mfLlGgY
YkwqkfrmJfoeFuv8OrLNrRd4//B4tzvcn4z/sa/xSpL/a17mFSzxF7iK/428
P521trKaoHxtctIkJt3+bn8EWznsd4+Gx7CpFZTl8w3ERChIEBz0VgjFCuup
pNgEwaH4013tp7cYS0NDKQsJdzGWrjKU+iWEwVRtYTNxtIw1lfgKVxotQxZ8
7KiXVapKS1hIZBIxhioJidKqyKt8UFo+SSsgrxu6sL751RmU7hAg8csbTddd
CRWOXyf2RFdiIoxWtFmnWNHIjp7R0EQxf0MxRx3TJDRJ/DVtq3jFlZ+p4BOi
moXTuBhbCJlycjRIwxLpsZOSsKNl6jDNMDL8YppP6gRuNzc4+xrGbR9Gj7Ak
KzKlyZvktO1Wiy3tQouS8j3UYWyNJ5WkVkRs1VhAi/R/Meb600BLqY5ion03
umS3qKimyb27yR4GWk87AIVY2jRFL8A+HWhL2nY2M+C4B/CHH3oVXJO8PuEX
0u3QoN2K2iSEGkA5q/dXIz2oW0pbm41AglZushdiQQEKw2ciFh0lLZwkYrRj
3khDXJsJG/idkC9v4doKtRb+utkV5y5X6JFT7v7rKwvcxUwMpTpmlBaxUpv4
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
/g9jE2AQXQcCAA==

-->

</rfc>

